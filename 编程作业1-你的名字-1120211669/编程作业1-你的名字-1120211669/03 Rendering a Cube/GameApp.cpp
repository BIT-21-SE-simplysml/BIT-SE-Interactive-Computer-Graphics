#include "GameApp.h"
#include "d3dUtil.h"
#include "DXTrace.h"
using namespace DirectX;

const D3D11_INPUT_ELEMENT_DESC GameApp::VertexPosColor::inputLayout[2] = {
	{ "POSITION", 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, 0, D3D11_INPUT_PER_VERTEX_DATA, 0 },
	{ "COLOR", 0, DXGI_FORMAT_R32G32B32A32_FLOAT, 0, 12, D3D11_INPUT_PER_VERTEX_DATA, 0 }
};

GameApp::GameApp(HINSTANCE hInstance)
	: D3DApp(hInstance), m_CBuffer()
{
}

GameApp::~GameApp()
{
}

bool GameApp::Init()
{
	if (!D3DApp::Init())
		return false;

	if (!InitEffect())
		return false;

	if (!InitResource())
		return false;

	return true;
}

void GameApp::OnResize()
{
	D3DApp::OnResize();
}

void GameApp::UpdateScene(float dt)
{

	static float phi = 0.0f, theta = 0.0f;
	phi += 0.0001f, theta += 0.00015f;
	m_CBuffer.world = XMMatrixTranspose(XMMatrixRotationX(phi) * XMMatrixRotationY(theta));
	// 更新常量缓冲区，让立方体转起来
	D3D11_MAPPED_SUBRESOURCE mappedData;
	HR(m_pd3dImmediateContext->Map(m_pConstantBuffer.Get(), 0, D3D11_MAP_WRITE_DISCARD, 0, &mappedData));
	memcpy_s(mappedData.pData, sizeof(m_CBuffer), &m_CBuffer, sizeof(m_CBuffer));
	m_pd3dImmediateContext->Unmap(m_pConstantBuffer.Get(), 0);
}

void GameApp::DrawScene()
{
	assert(m_pd3dImmediateContext);
	assert(m_pSwapChain);

	static float black[4] = { 0.0f, 0.0f, 0.0f, 1.0f };	// RGBA = (0,0,0,255)
	m_pd3dImmediateContext->ClearRenderTargetView(m_pRenderTargetView.Get(), reinterpret_cast<const float*>(&black));
	m_pd3dImmediateContext->ClearDepthStencilView(m_pDepthStencilView.Get(), D3D11_CLEAR_DEPTH | D3D11_CLEAR_STENCIL, 1.0f, 0);

	// 绘制磊
	//更改了这块地方
	m_pd3dImmediateContext->DrawIndexed(3000, 0, 0);
	HR(m_pSwapChain->Present(0, 0));
}


bool GameApp::InitEffect()
{
	ComPtr<ID3DBlob> blob;

	// 创建顶点着色器
	HR(CreateShaderFromFile(L"HLSL\\Cube_VS.cso", L"HLSL\\Cube_VS.hlsl", "VS", "vs_5_0", blob.ReleaseAndGetAddressOf()));
	HR(m_pd3dDevice->CreateVertexShader(blob->GetBufferPointer(), blob->GetBufferSize(), nullptr, m_pVertexShader.GetAddressOf()));
	// 创建顶点布局
	HR(m_pd3dDevice->CreateInputLayout(VertexPosColor::inputLayout, ARRAYSIZE(VertexPosColor::inputLayout),
		blob->GetBufferPointer(), blob->GetBufferSize(), m_pVertexLayout.GetAddressOf()));

	// 创建像素着色器
	HR(CreateShaderFromFile(L"HLSL\\Cube_PS.cso", L"HLSL\\Cube_PS.hlsl", "PS", "ps_5_0", blob.ReleaseAndGetAddressOf()));
	HR(m_pd3dDevice->CreatePixelShader(blob->GetBufferPointer(), blob->GetBufferSize(), nullptr, m_pPixelShader.GetAddressOf()));

	return true;
}

bool GameApp::InitResource()
{
//更改了这块地方
	VertexPosColor vertices[] =
	{
		{XMFLOAT3(-1.0000f, 2.3333f, -0.1667f), XMFLOAT4(0.394f, 0.114f, 0.667f, 1.000f) },
		{XMFLOAT3(-1.0000f, 2.6667f, -0.1667f), XMFLOAT4(0.822f, 0.315f, 0.542f, 1.000f) },
		{XMFLOAT3(-0.6667f, 2.6667f, -0.1667f), XMFLOAT4(0.131f, 0.700f, 0.704f, 1.000f) },
		{XMFLOAT3(-0.6667f, 2.3333f, -0.1667f), XMFLOAT4(0.629f, 0.841f, 0.596f, 1.000f) },
		{XMFLOAT3(-1.0000f, 2.3333f, 0.1667f), XMFLOAT4(0.787f, 0.463f, 0.313f, 1.000f) },
		{XMFLOAT3(-1.0000f, 2.6667f, 0.1667f), XMFLOAT4(0.463f, 0.608f, 0.663f, 1.000f) },
		{XMFLOAT3(-0.6667f, 2.6667f, 0.1667f), XMFLOAT4(0.102f, 0.511f, 0.559f, 1.000f) },
		{XMFLOAT3(-0.6667f, 2.3333f, 0.1667f), XMFLOAT4(0.217f, 0.628f, 0.807f, 1.000f) },
		
		{XMFLOAT3(-0.6667f, 2.3333f, -0.1667f), XMFLOAT4(0.604f, 0.709f, 0.246f, 1.000f) },
		{XMFLOAT3(-0.6667f, 2.6667f, -0.1667f), XMFLOAT4(0.451f, 0.982f, 0.849f, 1.000f) },
		{XMFLOAT3(-0.3333f, 2.6667f, -0.1667f), XMFLOAT4(0.244f, 0.332f, 0.871f, 1.000f) },
		{XMFLOAT3(-0.3333f, 2.3333f, -0.1667f), XMFLOAT4(0.510f, 0.236f, 0.019f, 1.000f) },
		{XMFLOAT3(-0.6667f, 2.3333f, 0.1667f), XMFLOAT4(0.597f, 0.782f, 0.516f, 1.000f) },
		{XMFLOAT3(-0.6667f, 2.6667f, 0.1667f), XMFLOAT4(0.842f, 0.804f, 0.897f, 1.000f) },
		{XMFLOAT3(-0.3333f, 2.6667f, 0.1667f), XMFLOAT4(0.168f, 0.585f, 0.280f, 1.000f) },
		{XMFLOAT3(-0.3333f, 2.3333f, 0.1667f), XMFLOAT4(0.850f, 0.647f, 0.554f, 1.000f) },
		
		{XMFLOAT3(-0.3333f, 2.3333f, -0.1667f), XMFLOAT4(0.328f, 0.947f, 0.619f, 1.000f) },
		{XMFLOAT3(-0.3333f, 2.6667f, -0.1667f), XMFLOAT4(0.591f, 0.752f, 0.736f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.6667f, -0.1667f), XMFLOAT4(0.644f, 0.676f, 0.401f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.3333f, -0.1667f), XMFLOAT4(0.832f, 0.371f, 0.169f, 1.000f) },
		{XMFLOAT3(-0.3333f, 2.3333f, 0.1667f), XMFLOAT4(0.466f, 0.101f, 0.359f, 1.000f) },
		{XMFLOAT3(-0.3333f, 2.6667f, 0.1667f), XMFLOAT4(0.448f, 0.131f, 0.379f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.6667f, 0.1667f), XMFLOAT4(0.740f, 0.282f, 0.088f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.3333f, 0.1667f), XMFLOAT4(0.190f, 0.737f, 0.837f, 1.000f) },
		
		{XMFLOAT3(0.0000f, 2.3333f, -0.1667f), XMFLOAT4(0.039f, 0.544f, 0.878f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.6667f, -0.1667f), XMFLOAT4(0.457f, 0.297f, 0.777f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.6667f, -0.1667f), XMFLOAT4(0.830f, 0.962f, 0.770f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.3333f, -0.1667f), XMFLOAT4(0.543f, 0.248f, 0.960f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.3333f, 0.1667f), XMFLOAT4(0.366f, 0.336f, 0.595f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.6667f, 0.1667f), XMFLOAT4(0.979f, 0.402f, 0.443f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.6667f, 0.1667f), XMFLOAT4(0.180f, 0.907f, 0.661f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.3333f, 0.1667f), XMFLOAT4(0.226f, 0.884f, 0.887f, 1.000f) },
		
		{XMFLOAT3(0.3333f, 2.3333f, -0.1667f), XMFLOAT4(0.131f, 0.292f, 0.773f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.6667f, -0.1667f), XMFLOAT4(0.302f, 0.506f, 0.470f, 1.000f) },
		{XMFLOAT3(0.6667f, 2.6667f, -0.1667f), XMFLOAT4(0.480f, 0.965f, 0.030f, 1.000f) },
		{XMFLOAT3(0.6667f, 2.3333f, -0.1667f), XMFLOAT4(0.475f, 0.570f, 0.446f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.3333f, 0.1667f), XMFLOAT4(0.424f, 0.771f, 0.414f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.6667f, 0.1667f), XMFLOAT4(0.694f, 0.353f, 0.653f, 1.000f) },
		{XMFLOAT3(0.6667f, 2.6667f, 0.1667f), XMFLOAT4(0.040f, 0.850f, 0.087f, 1.000f) },
		{XMFLOAT3(0.6667f, 2.3333f, 0.1667f), XMFLOAT4(0.378f, 0.698f, 0.724f, 1.000f) },
		
		{XMFLOAT3(0.6667f, 2.3333f, -0.1667f), XMFLOAT4(0.902f, 0.157f, 0.641f, 1.000f) },
		{XMFLOAT3(0.6667f, 2.6667f, -0.1667f), XMFLOAT4(0.029f, 0.986f, 0.372f, 1.000f) },
		{XMFLOAT3(1.0000f, 2.6667f, -0.1667f), XMFLOAT4(0.788f, 0.416f, 0.036f, 1.000f) },
		{XMFLOAT3(1.0000f, 2.3333f, -0.1667f), XMFLOAT4(0.148f, 0.073f, 0.107f, 1.000f) },
		{XMFLOAT3(0.6667f, 2.3333f, 0.1667f), XMFLOAT4(0.284f, 0.051f, 0.473f, 1.000f) },
		{XMFLOAT3(0.6667f, 2.6667f, 0.1667f), XMFLOAT4(0.312f, 0.071f, 0.258f, 1.000f) },
		{XMFLOAT3(1.0000f, 2.6667f, 0.1667f), XMFLOAT4(0.633f, 0.433f, 0.019f, 1.000f) },
		{XMFLOAT3(1.0000f, 2.3333f, 0.1667f), XMFLOAT4(0.259f, 0.780f, 0.108f, 1.000f) },
		
		{XMFLOAT3(1.0000f, 2.3333f, -0.1667f), XMFLOAT4(0.881f, 0.047f, 0.266f, 1.000f) },
		{XMFLOAT3(1.0000f, 2.6667f, -0.1667f), XMFLOAT4(0.181f, 0.609f, 0.022f, 1.000f) },
		{XMFLOAT3(1.3333f, 2.6667f, -0.1667f), XMFLOAT4(0.341f, 0.084f, 0.865f, 1.000f) },
		{XMFLOAT3(1.3333f, 2.3333f, -0.1667f), XMFLOAT4(0.638f, 0.016f, 0.262f, 1.000f) },
		{XMFLOAT3(1.0000f, 2.3333f, 0.1667f), XMFLOAT4(0.016f, 0.007f, 0.709f, 1.000f) },
		{XMFLOAT3(1.0000f, 2.6667f, 0.1667f), XMFLOAT4(0.689f, 0.252f, 0.619f, 1.000f) },
		{XMFLOAT3(1.3333f, 2.6667f, 0.1667f), XMFLOAT4(0.806f, 0.172f, 0.871f, 1.000f) },
		{XMFLOAT3(1.3333f, 2.3333f, 0.1667f), XMFLOAT4(0.787f, 0.765f, 0.183f, 1.000f) },
		
		{XMFLOAT3(0.0000f, 2.0000f, -0.1667f), XMFLOAT4(0.424f, 0.093f, 0.665f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.3333f, -0.1667f), XMFLOAT4(0.783f, 0.574f, 0.628f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.3333f, -0.1667f), XMFLOAT4(0.825f, 0.057f, 0.472f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.0000f, -0.1667f), XMFLOAT4(0.092f, 0.041f, 0.008f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.0000f, 0.1667f), XMFLOAT4(0.644f, 0.526f, 0.110f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.3333f, 0.1667f), XMFLOAT4(0.502f, 0.186f, 0.727f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.3333f, 0.1667f), XMFLOAT4(0.679f, 0.319f, 0.667f, 1.000f) },
		{XMFLOAT3(0.3333f, 2.0000f, 0.1667f), XMFLOAT4(0.097f, 0.532f, 0.387f, 1.000f) },
		
		{XMFLOAT3(-0.3333f, 1.6667f, -0.1667f), XMFLOAT4(0.021f, 0.946f, 0.477f, 1.000f) },
		{XMFLOAT3(-0.3333f, 2.0000f, -0.1667f), XMFLOAT4(0.423f, 0.983f, 0.705f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.0000f, -0.1667f), XMFLOAT4(0.149f, 0.318f, 0.082f, 1.000f) },
		{XMFLOAT3(0.0000f, 1.6667f, -0.1667f), XMFLOAT4(0.969f, 0.510f, 0.712f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.6667f, 0.1667f), XMFLOAT4(0.920f, 0.263f, 0.635f, 1.000f) },
		{XMFLOAT3(-0.3333f, 2.0000f, 0.1667f), XMFLOAT4(0.674f, 0.430f, 0.910f, 1.000f) },
		{XMFLOAT3(0.0000f, 2.0000f, 0.1667f), XMFLOAT4(0.067f, 0.740f, 0.100f, 1.000f) },
		{XMFLOAT3(0.0000f, 1.6667f, 0.1667f), XMFLOAT4(0.158f, 0.193f, 0.663f, 1.000f) },
		
		{XMFLOAT3(-0.6667f, 1.3333f, -0.1667f), XMFLOAT4(0.351f, 0.314f, 0.806f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.6667f, -0.1667f), XMFLOAT4(0.662f, 0.091f, 0.963f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.6667f, -0.1667f), XMFLOAT4(0.974f, 0.095f, 0.271f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.3333f, -0.1667f), XMFLOAT4(0.833f, 0.802f, 0.580f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.3333f, 0.1667f), XMFLOAT4(0.785f, 0.196f, 0.773f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.6667f, 0.1667f), XMFLOAT4(0.404f, 0.110f, 0.331f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.6667f, 0.1667f), XMFLOAT4(0.837f, 0.406f, 0.000f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.3333f, 0.1667f), XMFLOAT4(0.888f, 0.393f, 0.411f, 1.000f) },
		
		{XMFLOAT3(-1.0000f, 1.0000f, -0.1667f), XMFLOAT4(0.456f, 0.673f, 0.816f, 1.000f) },
		{XMFLOAT3(-1.0000f, 1.3333f, -0.1667f), XMFLOAT4(0.860f, 0.042f, 0.788f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.3333f, -0.1667f), XMFLOAT4(0.128f, 0.162f, 0.577f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.0000f, -0.1667f), XMFLOAT4(0.055f, 0.623f, 0.913f, 1.000f) },
		{XMFLOAT3(-1.0000f, 1.0000f, 0.1667f), XMFLOAT4(0.641f, 0.050f, 0.572f, 1.000f) },
		{XMFLOAT3(-1.0000f, 1.3333f, 0.1667f), XMFLOAT4(0.577f, 0.864f, 0.623f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.3333f, 0.1667f), XMFLOAT4(0.241f, 0.554f, 0.793f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.0000f, 0.1667f), XMFLOAT4(0.752f, 0.370f, 0.103f, 1.000f) },
		
		{XMFLOAT3(-1.3333f, 0.6667f, -0.1667f), XMFLOAT4(0.262f, 0.204f, 0.700f, 1.000f) },
		{XMFLOAT3(-1.3333f, 1.0000f, -0.1667f), XMFLOAT4(0.878f, 0.627f, 0.067f, 1.000f) },
		{XMFLOAT3(-1.0000f, 1.0000f, -0.1667f), XMFLOAT4(0.585f, 0.271f, 0.444f, 1.000f) },
		{XMFLOAT3(-1.0000f, 0.6667f, -0.1667f), XMFLOAT4(0.625f, 0.076f, 0.201f, 1.000f) },
		{XMFLOAT3(-1.3333f, 0.6667f, 0.1667f), XMFLOAT4(0.643f, 0.751f, 0.581f, 1.000f) },
		{XMFLOAT3(-1.3333f, 1.0000f, 0.1667f), XMFLOAT4(0.538f, 0.915f, 0.210f, 1.000f) },
		{XMFLOAT3(-1.0000f, 1.0000f, 0.1667f), XMFLOAT4(0.122f, 0.977f, 0.322f, 1.000f) },
		{XMFLOAT3(-1.0000f, 0.6667f, 0.1667f), XMFLOAT4(0.771f, 0.249f, 0.403f, 1.000f) },
		
		{XMFLOAT3(-0.3333f, 1.3333f, -0.1667f), XMFLOAT4(0.831f, 0.955f, 0.335f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.6667f, -0.1667f), XMFLOAT4(0.460f, 0.132f, 0.453f, 1.000f) },
		{XMFLOAT3(0.0000f, 1.6667f, -0.1667f), XMFLOAT4(0.307f, 0.874f, 0.179f, 1.000f) },
		{XMFLOAT3(0.0000f, 1.3333f, -0.1667f), XMFLOAT4(0.941f, 0.828f, 0.298f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.3333f, 0.1667f), XMFLOAT4(0.264f, 0.629f, 0.011f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.6667f, 0.1667f), XMFLOAT4(0.752f, 0.728f, 0.280f, 1.000f) },
		{XMFLOAT3(0.0000f, 1.6667f, 0.1667f), XMFLOAT4(0.272f, 0.536f, 0.368f, 1.000f) },
		{XMFLOAT3(0.0000f, 1.3333f, 0.1667f), XMFLOAT4(0.783f, 0.441f, 0.586f, 1.000f) },
		
		{XMFLOAT3(0.0000f, 1.3333f, -0.1667f), XMFLOAT4(0.719f, 0.343f, 0.730f, 1.000f) },
		{XMFLOAT3(0.0000f, 1.6667f, -0.1667f), XMFLOAT4(0.732f, 0.806f, 0.629f, 1.000f) },
		{XMFLOAT3(0.3333f, 1.6667f, -0.1667f), XMFLOAT4(0.714f, 0.379f, 0.238f, 1.000f) },
		{XMFLOAT3(0.3333f, 1.3333f, -0.1667f), XMFLOAT4(0.903f, 0.478f, 0.842f, 1.000f) },
		{XMFLOAT3(0.0000f, 1.3333f, 0.1667f), XMFLOAT4(0.874f, 0.218f, 0.459f, 1.000f) },
		{XMFLOAT3(0.0000f, 1.6667f, 0.1667f), XMFLOAT4(0.961f, 0.516f, 0.521f, 1.000f) },
		{XMFLOAT3(0.3333f, 1.6667f, 0.1667f), XMFLOAT4(0.760f, 0.783f, 0.797f, 1.000f) },
		{XMFLOAT3(0.3333f, 1.3333f, 0.1667f), XMFLOAT4(0.848f, 0.859f, 0.117f, 1.000f) },
		
		{XMFLOAT3(0.3333f, 1.3333f, -0.1667f), XMFLOAT4(0.839f, 0.546f, 0.406f, 1.000f) },
		{XMFLOAT3(0.3333f, 1.6667f, -0.1667f), XMFLOAT4(0.460f, 0.530f, 0.203f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.6667f, -0.1667f), XMFLOAT4(0.202f, 0.867f, 0.827f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.3333f, -0.1667f), XMFLOAT4(0.899f, 0.885f, 0.714f, 1.000f) },
		{XMFLOAT3(0.3333f, 1.3333f, 0.1667f), XMFLOAT4(0.959f, 0.431f, 0.939f, 1.000f) },
		{XMFLOAT3(0.3333f, 1.6667f, 0.1667f), XMFLOAT4(0.682f, 0.195f, 0.443f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.6667f, 0.1667f), XMFLOAT4(0.271f, 0.583f, 0.870f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.3333f, 0.1667f), XMFLOAT4(0.423f, 0.125f, 0.254f, 1.000f) },
		
		{XMFLOAT3(0.6667f, 1.3333f, -0.1667f), XMFLOAT4(0.340f, 0.764f, 0.068f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.6667f, -0.1667f), XMFLOAT4(0.368f, 0.645f, 0.783f, 1.000f) },
		{XMFLOAT3(1.0000f, 1.6667f, -0.1667f), XMFLOAT4(0.733f, 0.788f, 0.630f, 1.000f) },
		{XMFLOAT3(1.0000f, 1.3333f, -0.1667f), XMFLOAT4(0.851f, 0.363f, 0.720f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.3333f, 0.1667f), XMFLOAT4(0.349f, 0.506f, 0.781f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.6667f, 0.1667f), XMFLOAT4(0.073f, 0.716f, 0.327f, 1.000f) },
		{XMFLOAT3(1.0000f, 1.6667f, 0.1667f), XMFLOAT4(0.642f, 0.651f, 0.770f, 1.000f) },
		{XMFLOAT3(1.0000f, 1.3333f, 0.1667f), XMFLOAT4(0.028f, 0.855f, 0.153f, 1.000f) },
		
		{XMFLOAT3(0.6667f, 1.0000f, -0.1667f), XMFLOAT4(0.195f, 0.127f, 0.349f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.3333f, -0.1667f), XMFLOAT4(0.163f, 0.444f, 0.521f, 1.000f) },
		{XMFLOAT3(1.0000f, 1.3333f, -0.1667f), XMFLOAT4(0.684f, 0.115f, 0.525f, 1.000f) },
		{XMFLOAT3(1.0000f, 1.0000f, -0.1667f), XMFLOAT4(0.939f, 0.286f, 0.799f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.0000f, 0.1667f), XMFLOAT4(0.889f, 0.928f, 0.877f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.3333f, 0.1667f), XMFLOAT4(0.324f, 0.921f, 0.161f, 1.000f) },
		{XMFLOAT3(1.0000f, 1.3333f, 0.1667f), XMFLOAT4(0.415f, 0.153f, 0.612f, 1.000f) },
		{XMFLOAT3(1.0000f, 1.0000f, 0.1667f), XMFLOAT4(0.172f, 0.997f, 0.008f, 1.000f) },
		
		{XMFLOAT3(0.6667f, 0.6667f, -0.1667f), XMFLOAT4(0.863f, 0.367f, 0.052f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.0000f, -0.1667f), XMFLOAT4(0.466f, 0.529f, 0.380f, 1.000f) },
		{XMFLOAT3(1.0000f, 1.0000f, -0.1667f), XMFLOAT4(0.704f, 0.933f, 0.642f, 1.000f) },
		{XMFLOAT3(1.0000f, 0.6667f, -0.1667f), XMFLOAT4(0.644f, 0.649f, 0.520f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.6667f, 0.1667f), XMFLOAT4(0.539f, 0.095f, 0.566f, 1.000f) },
		{XMFLOAT3(0.6667f, 1.0000f, 0.1667f), XMFLOAT4(0.951f, 0.428f, 0.696f, 1.000f) },
		{XMFLOAT3(1.0000f, 1.0000f, 0.1667f), XMFLOAT4(0.012f, 0.578f, 0.973f, 1.000f) },
		{XMFLOAT3(1.0000f, 0.6667f, 0.1667f), XMFLOAT4(0.266f, 0.611f, 0.750f, 1.000f) },
		
		{XMFLOAT3(0.6667f, 0.3333f, -0.1667f), XMFLOAT4(0.714f, 0.062f, 0.296f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.6667f, -0.1667f), XMFLOAT4(0.382f, 0.336f, 0.425f, 1.000f) },
		{XMFLOAT3(1.0000f, 0.6667f, -0.1667f), XMFLOAT4(0.695f, 0.866f, 0.324f, 1.000f) },
		{XMFLOAT3(1.0000f, 0.3333f, -0.1667f), XMFLOAT4(0.746f, 0.294f, 0.168f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.3333f, 0.1667f), XMFLOAT4(0.259f, 0.493f, 0.421f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.6667f, 0.1667f), XMFLOAT4(0.507f, 0.114f, 0.126f, 1.000f) },
		{XMFLOAT3(1.0000f, 0.6667f, 0.1667f), XMFLOAT4(0.583f, 0.072f, 0.338f, 1.000f) },
		{XMFLOAT3(1.0000f, 0.3333f, 0.1667f), XMFLOAT4(0.513f, 0.774f, 0.844f, 1.000f) },
		
		{XMFLOAT3(-0.6667f, 1.0000f, -0.1667f), XMFLOAT4(0.838f, 0.053f, 0.770f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.3333f, -0.1667f), XMFLOAT4(0.906f, 0.087f, 0.111f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.3333f, -0.1667f), XMFLOAT4(0.322f, 0.729f, 0.001f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.0000f, -0.1667f), XMFLOAT4(0.158f, 0.053f, 0.613f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.0000f, 0.1667f), XMFLOAT4(0.044f, 0.922f, 0.047f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.3333f, 0.1667f), XMFLOAT4(0.486f, 0.585f, 0.684f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.3333f, 0.1667f), XMFLOAT4(0.590f, 0.006f, 0.991f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.0000f, 0.1667f), XMFLOAT4(0.112f, 0.090f, 0.428f, 1.000f) },
		
		{XMFLOAT3(-0.6667f, 0.6667f, -0.1667f), XMFLOAT4(0.352f, 0.812f, 0.219f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.0000f, -0.1667f), XMFLOAT4(0.803f, 0.700f, 0.917f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.0000f, -0.1667f), XMFLOAT4(0.340f, 0.883f, 0.441f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.6667f, -0.1667f), XMFLOAT4(0.339f, 0.491f, 0.095f, 1.000f) },
		{XMFLOAT3(-0.6667f, 0.6667f, 0.1667f), XMFLOAT4(0.439f, 0.551f, 0.617f, 1.000f) },
		{XMFLOAT3(-0.6667f, 1.0000f, 0.1667f), XMFLOAT4(0.939f, 0.896f, 0.879f, 1.000f) },
		{XMFLOAT3(-0.3333f, 1.0000f, 0.1667f), XMFLOAT4(0.706f, 0.392f, 0.341f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.6667f, 0.1667f), XMFLOAT4(0.075f, 0.999f, 0.393f, 1.000f) },
		
		{XMFLOAT3(-0.6667f, 0.3333f, -0.1667f), XMFLOAT4(0.959f, 0.856f, 0.606f, 1.000f) },
		{XMFLOAT3(-0.6667f, 0.6667f, -0.1667f), XMFLOAT4(0.178f, 0.233f, 0.657f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.6667f, -0.1667f), XMFLOAT4(0.788f, 0.831f, 0.406f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.3333f, -0.1667f), XMFLOAT4(0.899f, 0.482f, 0.317f, 1.000f) },
		{XMFLOAT3(-0.6667f, 0.3333f, 0.1667f), XMFLOAT4(0.074f, 0.051f, 0.547f, 1.000f) },
		{XMFLOAT3(-0.6667f, 0.6667f, 0.1667f), XMFLOAT4(0.375f, 0.808f, 0.427f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.6667f, 0.1667f), XMFLOAT4(0.385f, 0.976f, 0.495f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.3333f, 0.1667f), XMFLOAT4(0.966f, 0.324f, 0.924f, 1.000f) },
		
		{XMFLOAT3(-0.3333f, 0.3333f, -0.1667f), XMFLOAT4(0.660f, 0.881f, 0.257f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.6667f, -0.1667f), XMFLOAT4(0.633f, 0.350f, 0.671f, 1.000f) },
		{XMFLOAT3(0.0000f, 0.6667f, -0.1667f), XMFLOAT4(0.624f, 0.305f, 0.562f, 1.000f) },
		{XMFLOAT3(0.0000f, 0.3333f, -0.1667f), XMFLOAT4(0.180f, 0.999f, 0.737f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.3333f, 0.1667f), XMFLOAT4(0.481f, 0.696f, 0.868f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.6667f, 0.1667f), XMFLOAT4(0.529f, 0.677f, 0.595f, 1.000f) },
		{XMFLOAT3(0.0000f, 0.6667f, 0.1667f), XMFLOAT4(0.201f, 0.930f, 0.796f, 1.000f) },
		{XMFLOAT3(0.0000f, 0.3333f, 0.1667f), XMFLOAT4(0.089f, 0.067f, 0.788f, 1.000f) },
		
		{XMFLOAT3(0.0000f, 0.3333f, -0.1667f), XMFLOAT4(0.052f, 0.074f, 0.181f, 1.000f) },
		{XMFLOAT3(0.0000f, 0.6667f, -0.1667f), XMFLOAT4(0.025f, 0.532f, 0.380f, 1.000f) },
		{XMFLOAT3(0.3333f, 0.6667f, -0.1667f), XMFLOAT4(0.485f, 0.958f, 0.454f, 1.000f) },
		{XMFLOAT3(0.3333f, 0.3333f, -0.1667f), XMFLOAT4(0.651f, 0.561f, 0.116f, 1.000f) },
		{XMFLOAT3(0.0000f, 0.3333f, 0.1667f), XMFLOAT4(0.191f, 0.488f, 0.054f, 1.000f) },
		{XMFLOAT3(0.0000f, 0.6667f, 0.1667f), XMFLOAT4(0.720f, 0.782f, 0.064f, 1.000f) },
		{XMFLOAT3(0.3333f, 0.6667f, 0.1667f), XMFLOAT4(0.459f, 0.267f, 0.112f, 1.000f) },
		{XMFLOAT3(0.3333f, 0.3333f, 0.1667f), XMFLOAT4(0.256f, 0.620f, 0.408f, 1.000f) },
		
		{XMFLOAT3(0.3333f, 0.3333f, -0.1667f), XMFLOAT4(0.627f, 0.635f, 0.402f, 1.000f) },
		{XMFLOAT3(0.3333f, 0.6667f, -0.1667f), XMFLOAT4(0.666f, 0.382f, 0.800f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.6667f, -0.1667f), XMFLOAT4(0.784f, 0.542f, 0.894f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.3333f, -0.1667f), XMFLOAT4(0.131f, 0.291f, 0.400f, 1.000f) },
		{XMFLOAT3(0.3333f, 0.3333f, 0.1667f), XMFLOAT4(0.036f, 0.655f, 0.233f, 1.000f) },
		{XMFLOAT3(0.3333f, 0.6667f, 0.1667f), XMFLOAT4(0.656f, 0.453f, 0.909f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.6667f, 0.1667f), XMFLOAT4(0.973f, 0.589f, 0.146f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.3333f, 0.1667f), XMFLOAT4(0.818f, 0.468f, 0.892f, 1.000f) },
		
		{XMFLOAT3(-2.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.896f, 0.130f, 0.847f, 1.000f) },
		{XMFLOAT3(-2.3333f, 0.0000f, -0.1667f), XMFLOAT4(0.993f, 0.561f, 0.016f, 1.000f) },
		{XMFLOAT3(-2.0000f, 0.0000f, -0.1667f), XMFLOAT4(0.546f, 0.035f, 0.671f, 1.000f) },
		{XMFLOAT3(-2.0000f, -0.3333f, -0.1667f), XMFLOAT4(0.071f, 0.208f, 0.295f, 1.000f) },
		{XMFLOAT3(-2.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.537f, 0.080f, 0.547f, 1.000f) },
		{XMFLOAT3(-2.3333f, 0.0000f, 0.1667f), XMFLOAT4(0.709f, 0.980f, 0.327f, 1.000f) },
		{XMFLOAT3(-2.0000f, 0.0000f, 0.1667f), XMFLOAT4(0.634f, 0.575f, 0.066f, 1.000f) },
		{XMFLOAT3(-2.0000f, -0.3333f, 0.1667f), XMFLOAT4(0.830f, 0.618f, 0.476f, 1.000f) },
		
		{XMFLOAT3(-2.0000f, -0.3333f, -0.1667f), XMFLOAT4(0.592f, 0.036f, 0.044f, 1.000f) },
		{XMFLOAT3(-2.0000f, 0.0000f, -0.1667f), XMFLOAT4(0.382f, 0.677f, 0.846f, 1.000f) },
		{XMFLOAT3(-1.6667f, 0.0000f, -0.1667f), XMFLOAT4(0.504f, 0.230f, 0.495f, 1.000f) },
		{XMFLOAT3(-1.6667f, -0.3333f, -0.1667f), XMFLOAT4(0.448f, 0.549f, 0.046f, 1.000f) },
		{XMFLOAT3(-2.0000f, -0.3333f, 0.1667f), XMFLOAT4(0.606f, 0.774f, 0.012f, 1.000f) },
		{XMFLOAT3(-2.0000f, 0.0000f, 0.1667f), XMFLOAT4(0.958f, 0.977f, 0.401f, 1.000f) },
		{XMFLOAT3(-1.6667f, 0.0000f, 0.1667f), XMFLOAT4(0.250f, 0.704f, 0.732f, 1.000f) },
		{XMFLOAT3(-1.6667f, -0.3333f, 0.1667f), XMFLOAT4(0.683f, 0.678f, 0.265f, 1.000f) },
		
		{XMFLOAT3(-1.6667f, -0.3333f, -0.1667f), XMFLOAT4(0.940f, 0.704f, 0.100f, 1.000f) },
		{XMFLOAT3(-1.6667f, 0.0000f, -0.1667f), XMFLOAT4(0.656f, 0.671f, 0.133f, 1.000f) },
		{XMFLOAT3(-1.3333f, 0.0000f, -0.1667f), XMFLOAT4(0.600f, 0.041f, 0.510f, 1.000f) },
		{XMFLOAT3(-1.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.937f, 0.678f, 0.625f, 1.000f) },
		{XMFLOAT3(-1.6667f, -0.3333f, 0.1667f), XMFLOAT4(0.103f, 0.518f, 0.441f, 1.000f) },
		{XMFLOAT3(-1.6667f, 0.0000f, 0.1667f), XMFLOAT4(0.412f, 0.290f, 0.867f, 1.000f) },
		{XMFLOAT3(-1.3333f, 0.0000f, 0.1667f), XMFLOAT4(0.254f, 0.279f, 0.450f, 1.000f) },
		{XMFLOAT3(-1.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.245f, 0.382f, 0.999f, 1.000f) },
		
		{XMFLOAT3(-1.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.200f, 0.959f, 0.150f, 1.000f) },
		{XMFLOAT3(-1.3333f, 0.0000f, -0.1667f), XMFLOAT4(0.171f, 0.014f, 0.656f, 1.000f) },
		{XMFLOAT3(-1.0000f, 0.0000f, -0.1667f), XMFLOAT4(0.980f, 0.252f, 0.244f, 1.000f) },
		{XMFLOAT3(-1.0000f, -0.3333f, -0.1667f), XMFLOAT4(0.475f, 0.918f, 0.282f, 1.000f) },
		{XMFLOAT3(-1.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.516f, 0.242f, 0.225f, 1.000f) },
		{XMFLOAT3(-1.3333f, 0.0000f, 0.1667f), XMFLOAT4(0.570f, 0.284f, 0.050f, 1.000f) },
		{XMFLOAT3(-1.0000f, 0.0000f, 0.1667f), XMFLOAT4(0.357f, 0.483f, 0.241f, 1.000f) },
		{XMFLOAT3(-1.0000f, -0.3333f, 0.1667f), XMFLOAT4(0.476f, 0.835f, 0.146f, 1.000f) },
		
		{XMFLOAT3(-1.0000f, -0.3333f, -0.1667f), XMFLOAT4(0.264f, 0.970f, 0.742f, 1.000f) },
		{XMFLOAT3(-1.0000f, 0.0000f, -0.1667f), XMFLOAT4(0.020f, 0.817f, 0.413f, 1.000f) },
		{XMFLOAT3(-0.6667f, 0.0000f, -0.1667f), XMFLOAT4(0.552f, 0.442f, 0.763f, 1.000f) },
		{XMFLOAT3(-0.6667f, -0.3333f, -0.1667f), XMFLOAT4(0.297f, 0.978f, 0.356f, 1.000f) },
		{XMFLOAT3(-1.0000f, -0.3333f, 0.1667f), XMFLOAT4(0.075f, 0.470f, 0.229f, 1.000f) },
		{XMFLOAT3(-1.0000f, 0.0000f, 0.1667f), XMFLOAT4(0.938f, 0.766f, 0.025f, 1.000f) },
		{XMFLOAT3(-0.6667f, 0.0000f, 0.1667f), XMFLOAT4(0.573f, 0.558f, 0.399f, 1.000f) },
		{XMFLOAT3(-0.6667f, -0.3333f, 0.1667f), XMFLOAT4(0.908f, 0.766f, 0.476f, 1.000f) },
		
		{XMFLOAT3(-0.6667f, -0.3333f, -0.1667f), XMFLOAT4(0.058f, 0.470f, 0.160f, 1.000f) },
		{XMFLOAT3(-0.6667f, 0.0000f, -0.1667f), XMFLOAT4(0.161f, 0.851f, 0.335f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.0000f, -0.1667f), XMFLOAT4(0.285f, 0.556f, 0.156f, 1.000f) },
		{XMFLOAT3(-0.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.232f, 0.917f, 0.471f, 1.000f) },
		{XMFLOAT3(-0.6667f, -0.3333f, 0.1667f), XMFLOAT4(0.607f, 0.609f, 0.304f, 1.000f) },
		{XMFLOAT3(-0.6667f, 0.0000f, 0.1667f), XMFLOAT4(0.797f, 0.265f, 0.018f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.0000f, 0.1667f), XMFLOAT4(0.677f, 0.217f, 0.166f, 1.000f) },
		{XMFLOAT3(-0.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.839f, 0.338f, 0.615f, 1.000f) },
		
		{XMFLOAT3(-0.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.176f, 0.920f, 0.600f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.0000f, -0.1667f), XMFLOAT4(0.312f, 0.448f, 0.401f, 1.000f) },
		{XMFLOAT3(0.0000f, 0.0000f, -0.1667f), XMFLOAT4(0.712f, 0.823f, 0.564f, 1.000f) },
		{XMFLOAT3(0.0000f, -0.3333f, -0.1667f), XMFLOAT4(0.698f, 0.113f, 0.849f, 1.000f) },
		{XMFLOAT3(-0.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.118f, 0.639f, 0.780f, 1.000f) },
		{XMFLOAT3(-0.3333f, 0.0000f, 0.1667f), XMFLOAT4(0.670f, 0.734f, 0.921f, 1.000f) },
		{XMFLOAT3(0.0000f, 0.0000f, 0.1667f), XMFLOAT4(0.397f, 0.342f, 0.003f, 1.000f) },
		{XMFLOAT3(0.0000f, -0.3333f, 0.1667f), XMFLOAT4(0.677f, 0.477f, 0.729f, 1.000f) },
		
		{XMFLOAT3(-1.3333f, -0.6667f, -0.1667f), XMFLOAT4(0.930f, 0.409f, 0.064f, 1.000f) },
		{XMFLOAT3(-1.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.451f, 0.723f, 0.720f, 1.000f) },
		{XMFLOAT3(-1.0000f, -0.3333f, -0.1667f), XMFLOAT4(0.052f, 0.570f, 0.923f, 1.000f) },
		{XMFLOAT3(-1.0000f, -0.6667f, -0.1667f), XMFLOAT4(0.099f, 0.139f, 0.931f, 1.000f) },
		{XMFLOAT3(-1.3333f, -0.6667f, 0.1667f), XMFLOAT4(0.842f, 0.115f, 0.509f, 1.000f) },
		{XMFLOAT3(-1.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.867f, 0.523f, 0.230f, 1.000f) },
		{XMFLOAT3(-1.0000f, -0.3333f, 0.1667f), XMFLOAT4(0.722f, 0.495f, 0.610f, 1.000f) },
		{XMFLOAT3(-1.0000f, -0.6667f, 0.1667f), XMFLOAT4(0.834f, 0.390f, 0.177f, 1.000f) },
		
		{XMFLOAT3(-1.6667f, -1.0000f, -0.1667f), XMFLOAT4(0.270f, 0.155f, 0.843f, 1.000f) },
		{XMFLOAT3(-1.6667f, -0.6667f, -0.1667f), XMFLOAT4(0.559f, 0.418f, 0.035f, 1.000f) },
		{XMFLOAT3(-1.3333f, -0.6667f, -0.1667f), XMFLOAT4(0.150f, 0.676f, 0.272f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.0000f, -0.1667f), XMFLOAT4(0.560f, 0.619f, 0.107f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.0000f, 0.1667f), XMFLOAT4(0.161f, 0.165f, 0.323f, 1.000f) },
		{XMFLOAT3(-1.6667f, -0.6667f, 0.1667f), XMFLOAT4(0.091f, 0.627f, 0.975f, 1.000f) },
		{XMFLOAT3(-1.3333f, -0.6667f, 0.1667f), XMFLOAT4(0.973f, 0.132f, 0.934f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.0000f, 0.1667f), XMFLOAT4(0.041f, 0.914f, 0.044f, 1.000f) },
		
		{XMFLOAT3(-2.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.590f, 0.341f, 0.695f, 1.000f) },
		{XMFLOAT3(-2.0000f, -1.0000f, -0.1667f), XMFLOAT4(0.547f, 0.392f, 0.225f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.0000f, -0.1667f), XMFLOAT4(0.371f, 0.431f, 0.864f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.028f, 0.011f, 0.031f, 1.000f) },
		{XMFLOAT3(-2.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.081f, 0.594f, 0.304f, 1.000f) },
		{XMFLOAT3(-2.0000f, -1.0000f, 0.1667f), XMFLOAT4(0.040f, 0.244f, 0.865f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.0000f, 0.1667f), XMFLOAT4(0.666f, 0.762f, 0.308f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.194f, 0.085f, 0.637f, 1.000f) },
		
		{XMFLOAT3(-2.3333f, -1.6667f, -0.1667f), XMFLOAT4(0.055f, 0.420f, 0.918f, 1.000f) },
		{XMFLOAT3(-2.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.678f, 0.769f, 0.340f, 1.000f) },
		{XMFLOAT3(-2.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.742f, 0.539f, 0.727f, 1.000f) },
		{XMFLOAT3(-2.0000f, -1.6667f, -0.1667f), XMFLOAT4(0.152f, 0.917f, 0.885f, 1.000f) },
		{XMFLOAT3(-2.3333f, -1.6667f, 0.1667f), XMFLOAT4(0.678f, 0.320f, 0.445f, 1.000f) },
		{XMFLOAT3(-2.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.976f, 0.986f, 0.621f, 1.000f) },
		{XMFLOAT3(-2.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.373f, 0.129f, 0.921f, 1.000f) },
		{XMFLOAT3(-2.0000f, -1.6667f, 0.1667f), XMFLOAT4(0.661f, 0.709f, 0.963f, 1.000f) },
		
		{XMFLOAT3(-1.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.947f, 0.493f, 0.718f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.0000f, -0.1667f), XMFLOAT4(0.085f, 0.613f, 0.561f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.0000f, -0.1667f), XMFLOAT4(0.402f, 0.277f, 0.288f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.880f, 0.405f, 0.991f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.445f, 0.121f, 0.077f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.0000f, 0.1667f), XMFLOAT4(0.595f, 0.941f, 0.345f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.0000f, 0.1667f), XMFLOAT4(0.692f, 0.839f, 0.141f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.938f, 0.734f, 0.235f, 1.000f) },
		
		{XMFLOAT3(-1.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.098f, 0.335f, 0.060f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.0000f, -0.1667f), XMFLOAT4(0.157f, 0.632f, 0.609f, 1.000f) },
		{XMFLOAT3(-1.0000f, -1.0000f, -0.1667f), XMFLOAT4(0.489f, 0.713f, 0.771f, 1.000f) },
		{XMFLOAT3(-1.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.154f, 0.527f, 0.037f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.367f, 0.974f, 0.793f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.0000f, 0.1667f), XMFLOAT4(0.354f, 0.162f, 0.388f, 1.000f) },
		{XMFLOAT3(-1.0000f, -1.0000f, 0.1667f), XMFLOAT4(0.090f, 0.501f, 0.951f, 1.000f) },
		{XMFLOAT3(-1.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.660f, 0.798f, 0.174f, 1.000f) },
		
		{XMFLOAT3(-1.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.628f, 0.521f, 0.021f, 1.000f) },
		{XMFLOAT3(-1.0000f, -1.0000f, -0.1667f), XMFLOAT4(0.078f, 0.661f, 0.782f, 1.000f) },
		{XMFLOAT3(-0.6667f, -1.0000f, -0.1667f), XMFLOAT4(0.979f, 0.617f, 0.709f, 1.000f) },
		{XMFLOAT3(-0.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.921f, 0.439f, 0.573f, 1.000f) },
		{XMFLOAT3(-1.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.702f, 0.891f, 0.449f, 1.000f) },
		{XMFLOAT3(-1.0000f, -1.0000f, 0.1667f), XMFLOAT4(0.879f, 0.849f, 0.314f, 1.000f) },
		{XMFLOAT3(-0.6667f, -1.0000f, 0.1667f), XMFLOAT4(0.906f, 0.510f, 0.103f, 1.000f) },
		{XMFLOAT3(-0.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.202f, 0.277f, 0.589f, 1.000f) },
		
		{XMFLOAT3(-0.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.894f, 0.729f, 0.387f, 1.000f) },
		{XMFLOAT3(-0.6667f, -1.0000f, -0.1667f), XMFLOAT4(0.304f, 0.786f, 0.933f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.0000f, -0.1667f), XMFLOAT4(0.643f, 0.682f, 0.955f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.544f, 0.894f, 0.718f, 1.000f) },
		{XMFLOAT3(-0.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.371f, 0.269f, 0.154f, 1.000f) },
		{XMFLOAT3(-0.6667f, -1.0000f, 0.1667f), XMFLOAT4(0.852f, 0.561f, 0.058f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.0000f, 0.1667f), XMFLOAT4(0.085f, 0.913f, 0.092f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.830f, 0.809f, 0.578f, 1.000f) },
		
		{XMFLOAT3(-0.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.872f, 0.435f, 0.952f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.0000f, -0.1667f), XMFLOAT4(0.244f, 0.720f, 0.733f, 1.000f) },
		{XMFLOAT3(0.0000f, -1.0000f, -0.1667f), XMFLOAT4(0.823f, 0.215f, 0.883f, 1.000f) },
		{XMFLOAT3(0.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.805f, 0.404f, 0.091f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.006f, 0.877f, 0.916f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.0000f, 0.1667f), XMFLOAT4(0.509f, 0.815f, 0.318f, 1.000f) },
		{XMFLOAT3(0.0000f, -1.0000f, 0.1667f), XMFLOAT4(0.039f, 0.631f, 0.472f, 1.000f) },
		{XMFLOAT3(0.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.408f, 0.481f, 0.937f, 1.000f) },
		
		{XMFLOAT3(-1.6667f, -1.6667f, -0.1667f), XMFLOAT4(0.316f, 0.014f, 0.571f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.184f, 0.515f, 0.525f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.965f, 0.461f, 0.582f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.6667f, -0.1667f), XMFLOAT4(0.822f, 0.565f, 0.967f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.6667f, 0.1667f), XMFLOAT4(0.754f, 0.112f, 0.721f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.742f, 0.886f, 0.837f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.116f, 0.480f, 0.767f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.6667f, 0.1667f), XMFLOAT4(0.417f, 0.036f, 0.004f, 1.000f) },
		
		{XMFLOAT3(-1.6667f, -2.0000f, -0.1667f), XMFLOAT4(0.217f, 0.343f, 0.639f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.6667f, -0.1667f), XMFLOAT4(0.765f, 0.789f, 0.377f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.6667f, -0.1667f), XMFLOAT4(0.508f, 0.200f, 0.115f, 1.000f) },
		{XMFLOAT3(-1.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.832f, 0.759f, 0.801f, 1.000f) },
		{XMFLOAT3(-1.6667f, -2.0000f, 0.1667f), XMFLOAT4(0.234f, 0.055f, 0.613f, 1.000f) },
		{XMFLOAT3(-1.6667f, -1.6667f, 0.1667f), XMFLOAT4(0.078f, 0.060f, 0.444f, 1.000f) },
		{XMFLOAT3(-1.3333f, -1.6667f, 0.1667f), XMFLOAT4(0.886f, 0.591f, 0.845f, 1.000f) },
		{XMFLOAT3(-1.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.100f, 0.536f, 0.194f, 1.000f) },
		
		{XMFLOAT3(-1.6667f, -2.3333f, -0.1667f), XMFLOAT4(0.979f, 0.833f, 0.117f, 1.000f) },
		{XMFLOAT3(-1.6667f, -2.0000f, -0.1667f), XMFLOAT4(0.273f, 0.405f, 0.623f, 1.000f) },
		{XMFLOAT3(-1.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.494f, 0.764f, 0.590f, 1.000f) },
		{XMFLOAT3(-1.3333f, -2.3333f, -0.1667f), XMFLOAT4(0.910f, 0.453f, 0.046f, 1.000f) },
		{XMFLOAT3(-1.6667f, -2.3333f, 0.1667f), XMFLOAT4(0.233f, 0.137f, 0.947f, 1.000f) },
		{XMFLOAT3(-1.6667f, -2.0000f, 0.1667f), XMFLOAT4(0.311f, 0.263f, 0.054f, 1.000f) },
		{XMFLOAT3(-1.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.489f, 0.915f, 0.804f, 1.000f) },
		{XMFLOAT3(-1.3333f, -2.3333f, 0.1667f), XMFLOAT4(0.537f, 0.369f, 0.509f, 1.000f) },
		
		{XMFLOAT3(-0.3333f, -1.6667f, -0.1667f), XMFLOAT4(0.478f, 0.977f, 0.636f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.198f, 0.154f, 0.376f, 1.000f) },
		{XMFLOAT3(0.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.103f, 0.568f, 0.398f, 1.000f) },
		{XMFLOAT3(0.0000f, -1.6667f, -0.1667f), XMFLOAT4(0.559f, 0.694f, 0.254f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.6667f, 0.1667f), XMFLOAT4(0.142f, 0.995f, 0.286f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.650f, 0.194f, 0.387f, 1.000f) },
		{XMFLOAT3(0.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.803f, 0.550f, 0.302f, 1.000f) },
		{XMFLOAT3(0.0000f, -1.6667f, 0.1667f), XMFLOAT4(0.096f, 0.152f, 0.880f, 1.000f) },
		
		{XMFLOAT3(-0.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.338f, 0.910f, 0.118f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.6667f, -0.1667f), XMFLOAT4(0.576f, 0.466f, 0.864f, 1.000f) },
		{XMFLOAT3(0.0000f, -1.6667f, -0.1667f), XMFLOAT4(0.288f, 0.293f, 0.665f, 1.000f) },
		{XMFLOAT3(0.0000f, -2.0000f, -0.1667f), XMFLOAT4(0.793f, 0.888f, 0.331f, 1.000f) },
		{XMFLOAT3(-0.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.658f, 0.122f, 0.246f, 1.000f) },
		{XMFLOAT3(-0.3333f, -1.6667f, 0.1667f), XMFLOAT4(0.832f, 0.399f, 0.975f, 1.000f) },
		{XMFLOAT3(0.0000f, -1.6667f, 0.1667f), XMFLOAT4(0.469f, 0.669f, 0.306f, 1.000f) },
		{XMFLOAT3(0.0000f, -2.0000f, 0.1667f), XMFLOAT4(0.935f, 0.545f, 0.556f, 1.000f) },
		
		{XMFLOAT3(-0.3333f, -2.3333f, -0.1667f), XMFLOAT4(0.326f, 0.675f, 0.977f, 1.000f) },
		{XMFLOAT3(-0.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.305f, 0.729f, 0.914f, 1.000f) },
		{XMFLOAT3(0.0000f, -2.0000f, -0.1667f), XMFLOAT4(0.332f, 0.428f, 0.960f, 1.000f) },
		{XMFLOAT3(0.0000f, -2.3333f, -0.1667f), XMFLOAT4(0.413f, 0.641f, 0.676f, 1.000f) },
		{XMFLOAT3(-0.3333f, -2.3333f, 0.1667f), XMFLOAT4(0.686f, 0.950f, 0.644f, 1.000f) },
		{XMFLOAT3(-0.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.568f, 0.852f, 0.454f, 1.000f) },
		{XMFLOAT3(0.0000f, -2.0000f, 0.1667f), XMFLOAT4(0.626f, 0.512f, 0.508f, 1.000f) },
		{XMFLOAT3(0.0000f, -2.3333f, 0.1667f), XMFLOAT4(0.883f, 0.294f, 0.693f, 1.000f) },
		
		{XMFLOAT3(-1.3333f, -2.3333f, -0.1667f), XMFLOAT4(0.214f, 0.259f, 0.550f, 1.000f) },
		{XMFLOAT3(-1.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.573f, 0.970f, 0.148f, 1.000f) },
		{XMFLOAT3(-1.0000f, -2.0000f, -0.1667f), XMFLOAT4(0.681f, 0.270f, 0.201f, 1.000f) },
		{XMFLOAT3(-1.0000f, -2.3333f, -0.1667f), XMFLOAT4(0.983f, 0.455f, 0.912f, 1.000f) },
		{XMFLOAT3(-1.3333f, -2.3333f, 0.1667f), XMFLOAT4(0.963f, 0.791f, 0.358f, 1.000f) },
		{XMFLOAT3(-1.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.209f, 0.178f, 0.806f, 1.000f) },
		{XMFLOAT3(-1.0000f, -2.0000f, 0.1667f), XMFLOAT4(0.400f, 0.793f, 0.083f, 1.000f) },
		{XMFLOAT3(-1.0000f, -2.3333f, 0.1667f), XMFLOAT4(0.425f, 0.516f, 0.275f, 1.000f) },
		
		{XMFLOAT3(-1.0000f, -2.3333f, -0.1667f), XMFLOAT4(0.925f, 0.372f, 0.045f, 1.000f) },
		{XMFLOAT3(-1.0000f, -2.0000f, -0.1667f), XMFLOAT4(0.236f, 0.577f, 0.336f, 1.000f) },
		{XMFLOAT3(-0.6667f, -2.0000f, -0.1667f), XMFLOAT4(0.799f, 0.972f, 0.597f, 1.000f) },
		{XMFLOAT3(-0.6667f, -2.3333f, -0.1667f), XMFLOAT4(0.279f, 0.460f, 0.824f, 1.000f) },
		{XMFLOAT3(-1.0000f, -2.3333f, 0.1667f), XMFLOAT4(0.440f, 0.115f, 0.239f, 1.000f) },
		{XMFLOAT3(-1.0000f, -2.0000f, 0.1667f), XMFLOAT4(0.665f, 0.986f, 0.806f, 1.000f) },
		{XMFLOAT3(-0.6667f, -2.0000f, 0.1667f), XMFLOAT4(0.121f, 0.608f, 0.803f, 1.000f) },
		{XMFLOAT3(-0.6667f, -2.3333f, 0.1667f), XMFLOAT4(0.382f, 0.185f, 0.976f, 1.000f) },
		
		{XMFLOAT3(-0.6667f, -2.3333f, -0.1667f), XMFLOAT4(0.407f, 0.626f, 0.021f, 1.000f) },
		{XMFLOAT3(-0.6667f, -2.0000f, -0.1667f), XMFLOAT4(0.044f, 0.086f, 0.460f, 1.000f) },
		{XMFLOAT3(-0.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.510f, 0.572f, 0.835f, 1.000f) },
		{XMFLOAT3(-0.3333f, -2.3333f, -0.1667f), XMFLOAT4(0.694f, 0.819f, 0.970f, 1.000f) },
		{XMFLOAT3(-0.6667f, -2.3333f, 0.1667f), XMFLOAT4(0.098f, 0.520f, 0.694f, 1.000f) },
		{XMFLOAT3(-0.6667f, -2.0000f, 0.1667f), XMFLOAT4(0.985f, 0.407f, 0.436f, 1.000f) },
		{XMFLOAT3(-0.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.967f, 0.688f, 0.967f, 1.000f) },
		{XMFLOAT3(-0.3333f, -2.3333f, 0.1667f), XMFLOAT4(0.776f, 0.949f, 0.873f, 1.000f) },
		
		{XMFLOAT3(0.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.038f, 0.531f, 0.859f, 1.000f) },
		{XMFLOAT3(0.3333f, 0.0000f, -0.1667f), XMFLOAT4(0.499f, 0.245f, 0.302f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.0000f, -0.1667f), XMFLOAT4(0.558f, 0.364f, 0.015f, 1.000f) },
		{XMFLOAT3(0.6667f, -0.3333f, -0.1667f), XMFLOAT4(0.883f, 0.040f, 0.280f, 1.000f) },
		{XMFLOAT3(0.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.419f, 0.636f, 0.727f, 1.000f) },
		{XMFLOAT3(0.3333f, 0.0000f, 0.1667f), XMFLOAT4(0.060f, 0.968f, 0.781f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.0000f, 0.1667f), XMFLOAT4(0.587f, 0.754f, 0.268f, 1.000f) },
		{XMFLOAT3(0.6667f, -0.3333f, 0.1667f), XMFLOAT4(0.879f, 0.341f, 0.004f, 1.000f) },
		
		{XMFLOAT3(0.6667f, -0.3333f, -0.1667f), XMFLOAT4(0.154f, 0.325f, 0.970f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.0000f, -0.1667f), XMFLOAT4(0.668f, 0.489f, 0.672f, 1.000f) },
		{XMFLOAT3(1.0000f, 0.0000f, -0.1667f), XMFLOAT4(0.579f, 0.321f, 0.320f, 1.000f) },
		{XMFLOAT3(1.0000f, -0.3333f, -0.1667f), XMFLOAT4(0.675f, 0.707f, 0.408f, 1.000f) },
		{XMFLOAT3(0.6667f, -0.3333f, 0.1667f), XMFLOAT4(0.777f, 0.709f, 0.218f, 1.000f) },
		{XMFLOAT3(0.6667f, 0.0000f, 0.1667f), XMFLOAT4(0.096f, 0.681f, 0.628f, 1.000f) },
		{XMFLOAT3(1.0000f, 0.0000f, 0.1667f), XMFLOAT4(0.513f, 0.755f, 0.317f, 1.000f) },
		{XMFLOAT3(1.0000f, -0.3333f, 0.1667f), XMFLOAT4(0.036f, 0.258f, 0.491f, 1.000f) },
		
		{XMFLOAT3(1.0000f, -0.3333f, -0.1667f), XMFLOAT4(0.057f, 0.886f, 0.725f, 1.000f) },
		{XMFLOAT3(1.0000f, 0.0000f, -0.1667f), XMFLOAT4(0.144f, 0.066f, 0.640f, 1.000f) },
		{XMFLOAT3(1.3333f, 0.0000f, -0.1667f), XMFLOAT4(0.310f, 0.301f, 0.036f, 1.000f) },
		{XMFLOAT3(1.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.322f, 0.101f, 0.783f, 1.000f) },
		{XMFLOAT3(1.0000f, -0.3333f, 0.1667f), XMFLOAT4(0.261f, 0.152f, 0.865f, 1.000f) },
		{XMFLOAT3(1.0000f, 0.0000f, 0.1667f), XMFLOAT4(0.744f, 0.650f, 0.605f, 1.000f) },
		{XMFLOAT3(1.3333f, 0.0000f, 0.1667f), XMFLOAT4(0.232f, 0.543f, 0.751f, 1.000f) },
		{XMFLOAT3(1.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.557f, 0.552f, 0.943f, 1.000f) },
		
		{XMFLOAT3(1.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.916f, 0.520f, 0.913f, 1.000f) },
		{XMFLOAT3(1.3333f, 0.0000f, -0.1667f), XMFLOAT4(0.868f, 0.366f, 0.476f, 1.000f) },
		{XMFLOAT3(1.6667f, 0.0000f, -0.1667f), XMFLOAT4(0.147f, 0.891f, 0.701f, 1.000f) },
		{XMFLOAT3(1.6667f, -0.3333f, -0.1667f), XMFLOAT4(0.333f, 0.545f, 0.859f, 1.000f) },
		{XMFLOAT3(1.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.691f, 0.734f, 0.360f, 1.000f) },
		{XMFLOAT3(1.3333f, 0.0000f, 0.1667f), XMFLOAT4(0.411f, 0.436f, 0.963f, 1.000f) },
		{XMFLOAT3(1.6667f, 0.0000f, 0.1667f), XMFLOAT4(0.028f, 0.091f, 0.033f, 1.000f) },
		{XMFLOAT3(1.6667f, -0.3333f, 0.1667f), XMFLOAT4(0.965f, 0.207f, 0.574f, 1.000f) },
		
		{XMFLOAT3(1.6667f, -0.3333f, -0.1667f), XMFLOAT4(0.257f, 0.118f, 0.854f, 1.000f) },
		{XMFLOAT3(1.6667f, 0.0000f, -0.1667f), XMFLOAT4(0.395f, 0.177f, 0.505f, 1.000f) },
		{XMFLOAT3(2.0000f, 0.0000f, -0.1667f), XMFLOAT4(0.731f, 0.424f, 0.406f, 1.000f) },
		{XMFLOAT3(2.0000f, -0.3333f, -0.1667f), XMFLOAT4(0.598f, 0.745f, 0.478f, 1.000f) },
		{XMFLOAT3(1.6667f, -0.3333f, 0.1667f), XMFLOAT4(0.534f, 0.770f, 0.305f, 1.000f) },
		{XMFLOAT3(1.6667f, 0.0000f, 0.1667f), XMFLOAT4(0.549f, 0.752f, 0.628f, 1.000f) },
		{XMFLOAT3(2.0000f, 0.0000f, 0.1667f), XMFLOAT4(0.998f, 0.587f, 0.229f, 1.000f) },
		{XMFLOAT3(2.0000f, -0.3333f, 0.1667f), XMFLOAT4(0.411f, 0.310f, 0.284f, 1.000f) },
		
		{XMFLOAT3(2.0000f, -0.3333f, -0.1667f), XMFLOAT4(0.379f, 0.268f, 0.322f, 1.000f) },
		{XMFLOAT3(2.0000f, 0.0000f, -0.1667f), XMFLOAT4(0.569f, 0.324f, 0.047f, 1.000f) },
		{XMFLOAT3(2.3333f, 0.0000f, -0.1667f), XMFLOAT4(0.017f, 0.299f, 0.479f, 1.000f) },
		{XMFLOAT3(2.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.823f, 0.030f, 0.065f, 1.000f) },
		{XMFLOAT3(2.0000f, -0.3333f, 0.1667f), XMFLOAT4(0.133f, 0.639f, 0.604f, 1.000f) },
		{XMFLOAT3(2.0000f, 0.0000f, 0.1667f), XMFLOAT4(0.160f, 0.864f, 0.057f, 1.000f) },
		{XMFLOAT3(2.3333f, 0.0000f, 0.1667f), XMFLOAT4(0.487f, 0.063f, 0.605f, 1.000f) },
		{XMFLOAT3(2.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.261f, 0.075f, 0.289f, 1.000f) },
		
		{XMFLOAT3(2.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.721f, 0.860f, 0.126f, 1.000f) },
		{XMFLOAT3(2.3333f, 0.0000f, -0.1667f), XMFLOAT4(0.615f, 0.979f, 0.104f, 1.000f) },
		{XMFLOAT3(2.6667f, 0.0000f, -0.1667f), XMFLOAT4(0.852f, 0.995f, 0.275f, 1.000f) },
		{XMFLOAT3(2.6667f, -0.3333f, -0.1667f), XMFLOAT4(0.803f, 0.581f, 0.797f, 1.000f) },
		{XMFLOAT3(2.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.049f, 0.785f, 0.917f, 1.000f) },
		{XMFLOAT3(2.3333f, 0.0000f, 0.1667f), XMFLOAT4(0.417f, 0.320f, 0.315f, 1.000f) },
		{XMFLOAT3(2.6667f, 0.0000f, 0.1667f), XMFLOAT4(0.093f, 0.583f, 0.607f, 1.000f) },
		{XMFLOAT3(2.6667f, -0.3333f, 0.1667f), XMFLOAT4(0.279f, 0.954f, 0.839f, 1.000f) },
		
		{XMFLOAT3(1.3333f, -0.6667f, -0.1667f), XMFLOAT4(0.175f, 0.947f, 0.132f, 1.000f) },
		{XMFLOAT3(1.3333f, -0.3333f, -0.1667f), XMFLOAT4(0.056f, 0.168f, 0.816f, 1.000f) },
		{XMFLOAT3(1.6667f, -0.3333f, -0.1667f), XMFLOAT4(0.060f, 0.204f, 0.377f, 1.000f) },
		{XMFLOAT3(1.6667f, -0.6667f, -0.1667f), XMFLOAT4(0.658f, 0.048f, 0.742f, 1.000f) },
		{XMFLOAT3(1.3333f, -0.6667f, 0.1667f), XMFLOAT4(0.779f, 0.087f, 0.213f, 1.000f) },
		{XMFLOAT3(1.3333f, -0.3333f, 0.1667f), XMFLOAT4(0.486f, 0.932f, 0.604f, 1.000f) },
		{XMFLOAT3(1.6667f, -0.3333f, 0.1667f), XMFLOAT4(0.092f, 0.525f, 0.548f, 1.000f) },
		{XMFLOAT3(1.6667f, -0.6667f, 0.1667f), XMFLOAT4(0.805f, 0.453f, 0.186f, 1.000f) },
		
		{XMFLOAT3(1.0000f, -1.0000f, -0.1667f), XMFLOAT4(0.416f, 0.604f, 0.719f, 1.000f) },
		{XMFLOAT3(1.0000f, -0.6667f, -0.1667f), XMFLOAT4(0.369f, 0.553f, 0.885f, 1.000f) },
		{XMFLOAT3(1.3333f, -0.6667f, -0.1667f), XMFLOAT4(0.035f, 0.214f, 0.208f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.0000f, -0.1667f), XMFLOAT4(0.236f, 0.564f, 0.194f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.0000f, 0.1667f), XMFLOAT4(0.932f, 0.684f, 0.675f, 1.000f) },
		{XMFLOAT3(1.0000f, -0.6667f, 0.1667f), XMFLOAT4(0.184f, 0.107f, 0.896f, 1.000f) },
		{XMFLOAT3(1.3333f, -0.6667f, 0.1667f), XMFLOAT4(0.078f, 0.280f, 0.869f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.0000f, 0.1667f), XMFLOAT4(0.870f, 0.444f, 0.105f, 1.000f) },
		
		{XMFLOAT3(0.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.845f, 0.766f, 0.626f, 1.000f) },
		{XMFLOAT3(0.6667f, -1.0000f, -0.1667f), XMFLOAT4(0.441f, 0.724f, 0.889f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.0000f, -0.1667f), XMFLOAT4(0.149f, 0.727f, 0.932f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.519f, 0.824f, 0.408f, 1.000f) },
		{XMFLOAT3(0.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.527f, 0.474f, 0.982f, 1.000f) },
		{XMFLOAT3(0.6667f, -1.0000f, 0.1667f), XMFLOAT4(0.213f, 0.011f, 0.377f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.0000f, 0.1667f), XMFLOAT4(0.475f, 0.215f, 0.092f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.100f, 0.402f, 0.412f, 1.000f) },
		
		{XMFLOAT3(0.3333f, -1.6667f, -0.1667f), XMFLOAT4(0.127f, 0.629f, 0.308f, 1.000f) },
		{XMFLOAT3(0.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.989f, 0.918f, 0.370f, 1.000f) },
		{XMFLOAT3(0.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.396f, 0.072f, 0.246f, 1.000f) },
		{XMFLOAT3(0.6667f, -1.6667f, -0.1667f), XMFLOAT4(0.837f, 0.152f, 0.245f, 1.000f) },
		{XMFLOAT3(0.3333f, -1.6667f, 0.1667f), XMFLOAT4(0.841f, 0.411f, 0.840f, 1.000f) },
		{XMFLOAT3(0.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.426f, 0.302f, 0.880f, 1.000f) },
		{XMFLOAT3(0.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.006f, 0.870f, 0.541f, 1.000f) },
		{XMFLOAT3(0.6667f, -1.6667f, 0.1667f), XMFLOAT4(0.447f, 0.446f, 0.276f, 1.000f) },
		
		{XMFLOAT3(1.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.169f, 0.347f, 0.289f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.0000f, -0.1667f), XMFLOAT4(0.787f, 0.647f, 0.798f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.0000f, -0.1667f), XMFLOAT4(0.378f, 0.503f, 0.759f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.495f, 0.365f, 0.442f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.260f, 0.968f, 0.937f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.0000f, 0.1667f), XMFLOAT4(0.869f, 0.236f, 0.220f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.0000f, 0.1667f), XMFLOAT4(0.202f, 0.451f, 0.435f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.354f, 0.578f, 0.310f, 1.000f) },
		
		{XMFLOAT3(1.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.565f, 0.323f, 0.857f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.0000f, -0.1667f), XMFLOAT4(0.572f, 0.356f, 0.871f, 1.000f) },
		{XMFLOAT3(1.6667f, -1.0000f, -0.1667f), XMFLOAT4(0.708f, 0.694f, 0.918f, 1.000f) },
		{XMFLOAT3(1.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.284f, 0.746f, 0.104f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.894f, 0.686f, 0.634f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.0000f, 0.1667f), XMFLOAT4(0.047f, 0.748f, 0.597f, 1.000f) },
		{XMFLOAT3(1.6667f, -1.0000f, 0.1667f), XMFLOAT4(0.829f, 0.369f, 0.314f, 1.000f) },
		{XMFLOAT3(1.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.092f, 0.732f, 0.657f, 1.000f) },
		
		{XMFLOAT3(1.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.589f, 0.102f, 0.718f, 1.000f) },
		{XMFLOAT3(1.6667f, -1.0000f, -0.1667f), XMFLOAT4(0.005f, 0.051f, 0.448f, 1.000f) },
		{XMFLOAT3(2.0000f, -1.0000f, -0.1667f), XMFLOAT4(0.278f, 0.787f, 0.275f, 1.000f) },
		{XMFLOAT3(2.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.785f, 0.951f, 0.473f, 1.000f) },
		{XMFLOAT3(1.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.834f, 0.889f, 0.263f, 1.000f) },
		{XMFLOAT3(1.6667f, -1.0000f, 0.1667f), XMFLOAT4(0.271f, 0.437f, 0.206f, 1.000f) },
		{XMFLOAT3(2.0000f, -1.0000f, 0.1667f), XMFLOAT4(0.342f, 0.148f, 0.258f, 1.000f) },
		{XMFLOAT3(2.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.492f, 0.250f, 0.925f, 1.000f) },
		
		{XMFLOAT3(2.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.660f, 0.198f, 0.392f, 1.000f) },
		{XMFLOAT3(2.0000f, -1.0000f, -0.1667f), XMFLOAT4(0.336f, 0.052f, 0.299f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.0000f, -0.1667f), XMFLOAT4(0.194f, 0.293f, 0.970f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.871f, 0.744f, 0.959f, 1.000f) },
		{XMFLOAT3(2.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.850f, 0.572f, 0.714f, 1.000f) },
		{XMFLOAT3(2.0000f, -1.0000f, 0.1667f), XMFLOAT4(0.262f, 0.311f, 0.174f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.0000f, 0.1667f), XMFLOAT4(0.461f, 0.245f, 0.168f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.429f, 0.134f, 0.811f, 1.000f) },
		
		{XMFLOAT3(2.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.613f, 0.612f, 0.079f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.0000f, -0.1667f), XMFLOAT4(0.574f, 0.582f, 0.872f, 1.000f) },
		{XMFLOAT3(2.6667f, -1.0000f, -0.1667f), XMFLOAT4(0.388f, 0.268f, 0.323f, 1.000f) },
		{XMFLOAT3(2.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.926f, 0.784f, 0.762f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.203f, 0.375f, 0.333f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.0000f, 0.1667f), XMFLOAT4(0.010f, 0.394f, 0.405f, 1.000f) },
		{XMFLOAT3(2.6667f, -1.0000f, 0.1667f), XMFLOAT4(0.370f, 0.853f, 0.974f, 1.000f) },
		{XMFLOAT3(2.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.131f, 0.914f, 0.896f, 1.000f) },
		
		{XMFLOAT3(1.0000f, -1.6667f, -0.1667f), XMFLOAT4(0.967f, 0.366f, 0.953f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.3333f, -0.1667f), XMFLOAT4(0.871f, 0.905f, 0.527f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.364f, 0.098f, 0.637f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.6667f, -0.1667f), XMFLOAT4(0.307f, 0.523f, 0.262f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.6667f, 0.1667f), XMFLOAT4(0.581f, 0.213f, 0.306f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.3333f, 0.1667f), XMFLOAT4(0.689f, 0.919f, 0.102f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.038f, 0.596f, 0.264f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.6667f, 0.1667f), XMFLOAT4(0.513f, 0.107f, 0.503f, 1.000f) },
		
		{XMFLOAT3(1.0000f, -2.0000f, -0.1667f), XMFLOAT4(0.557f, 0.983f, 0.137f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.6667f, -0.1667f), XMFLOAT4(0.625f, 0.484f, 0.889f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.6667f, -0.1667f), XMFLOAT4(0.051f, 0.440f, 0.030f, 1.000f) },
		{XMFLOAT3(1.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.929f, 0.763f, 0.328f, 1.000f) },
		{XMFLOAT3(1.0000f, -2.0000f, 0.1667f), XMFLOAT4(0.684f, 0.391f, 0.300f, 1.000f) },
		{XMFLOAT3(1.0000f, -1.6667f, 0.1667f), XMFLOAT4(0.888f, 0.931f, 0.790f, 1.000f) },
		{XMFLOAT3(1.3333f, -1.6667f, 0.1667f), XMFLOAT4(0.576f, 0.456f, 0.847f, 1.000f) },
		{XMFLOAT3(1.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.687f, 0.365f, 0.201f, 1.000f) },
		
		{XMFLOAT3(1.0000f, -2.3333f, -0.1667f), XMFLOAT4(0.159f, 0.680f, 0.796f, 1.000f) },
		{XMFLOAT3(1.0000f, -2.0000f, -0.1667f), XMFLOAT4(0.535f, 0.851f, 0.489f, 1.000f) },
		{XMFLOAT3(1.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.173f, 0.592f, 0.856f, 1.000f) },
		{XMFLOAT3(1.3333f, -2.3333f, -0.1667f), XMFLOAT4(0.564f, 0.744f, 0.615f, 1.000f) },
		{XMFLOAT3(1.0000f, -2.3333f, 0.1667f), XMFLOAT4(0.612f, 0.485f, 0.526f, 1.000f) },
		{XMFLOAT3(1.0000f, -2.0000f, 0.1667f), XMFLOAT4(0.023f, 0.352f, 0.961f, 1.000f) },
		{XMFLOAT3(1.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.341f, 0.454f, 0.942f, 1.000f) },
		{XMFLOAT3(1.3333f, -2.3333f, 0.1667f), XMFLOAT4(0.816f, 0.770f, 0.526f, 1.000f) },
		
		{XMFLOAT3(2.3333f, -1.6667f, -0.1667f), XMFLOAT4(0.558f, 0.960f, 0.910f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.3333f, -0.1667f), XMFLOAT4(0.071f, 0.236f, 0.939f, 1.000f) },
		{XMFLOAT3(2.6667f, -1.3333f, -0.1667f), XMFLOAT4(0.913f, 0.947f, 0.881f, 1.000f) },
		{XMFLOAT3(2.6667f, -1.6667f, -0.1667f), XMFLOAT4(0.055f, 0.503f, 0.985f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.6667f, 0.1667f), XMFLOAT4(0.982f, 0.648f, 0.609f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.3333f, 0.1667f), XMFLOAT4(0.907f, 0.555f, 0.729f, 1.000f) },
		{XMFLOAT3(2.6667f, -1.3333f, 0.1667f), XMFLOAT4(0.343f, 0.612f, 0.752f, 1.000f) },
		{XMFLOAT3(2.6667f, -1.6667f, 0.1667f), XMFLOAT4(0.311f, 0.912f, 0.539f, 1.000f) },
		
		{XMFLOAT3(2.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.376f, 0.962f, 0.947f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.6667f, -0.1667f), XMFLOAT4(0.368f, 0.898f, 0.315f, 1.000f) },
		{XMFLOAT3(2.6667f, -1.6667f, -0.1667f), XMFLOAT4(0.181f, 0.927f, 0.747f, 1.000f) },
		{XMFLOAT3(2.6667f, -2.0000f, -0.1667f), XMFLOAT4(0.734f, 0.130f, 0.008f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.372f, 0.127f, 0.764f, 1.000f) },
		{XMFLOAT3(2.3333f, -1.6667f, 0.1667f), XMFLOAT4(0.242f, 0.363f, 0.213f, 1.000f) },
		{XMFLOAT3(2.6667f, -1.6667f, 0.1667f), XMFLOAT4(0.026f, 0.745f, 0.748f, 1.000f) },
		{XMFLOAT3(2.6667f, -2.0000f, 0.1667f), XMFLOAT4(0.842f, 0.442f, 0.620f, 1.000f) },
		
		{XMFLOAT3(2.3333f, -2.3333f, -0.1667f), XMFLOAT4(0.879f, 0.542f, 0.390f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.407f, 0.831f, 0.215f, 1.000f) },
		{XMFLOAT3(2.6667f, -2.0000f, -0.1667f), XMFLOAT4(0.103f, 0.322f, 0.807f, 1.000f) },
		{XMFLOAT3(2.6667f, -2.3333f, -0.1667f), XMFLOAT4(0.866f, 0.642f, 0.716f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.3333f, 0.1667f), XMFLOAT4(0.700f, 0.124f, 0.102f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.567f, 0.068f, 0.410f, 1.000f) },
		{XMFLOAT3(2.6667f, -2.0000f, 0.1667f), XMFLOAT4(0.568f, 0.071f, 0.637f, 1.000f) },
		{XMFLOAT3(2.6667f, -2.3333f, 0.1667f), XMFLOAT4(0.551f, 0.704f, 0.631f, 1.000f) },
		
		{XMFLOAT3(1.3333f, -2.3333f, -0.1667f), XMFLOAT4(0.069f, 0.542f, 0.936f, 1.000f) },
		{XMFLOAT3(1.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.416f, 0.276f, 0.213f, 1.000f) },
		{XMFLOAT3(1.6667f, -2.0000f, -0.1667f), XMFLOAT4(0.919f, 0.439f, 0.727f, 1.000f) },
		{XMFLOAT3(1.6667f, -2.3333f, -0.1667f), XMFLOAT4(0.292f, 0.801f, 0.769f, 1.000f) },
		{XMFLOAT3(1.3333f, -2.3333f, 0.1667f), XMFLOAT4(0.894f, 0.349f, 0.293f, 1.000f) },
		{XMFLOAT3(1.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.999f, 0.270f, 0.524f, 1.000f) },
		{XMFLOAT3(1.6667f, -2.0000f, 0.1667f), XMFLOAT4(0.859f, 0.102f, 0.720f, 1.000f) },
		{XMFLOAT3(1.6667f, -2.3333f, 0.1667f), XMFLOAT4(0.858f, 0.980f, 0.789f, 1.000f) },
		
		{XMFLOAT3(1.6667f, -2.3333f, -0.1667f), XMFLOAT4(0.373f, 0.634f, 0.093f, 1.000f) },
		{XMFLOAT3(1.6667f, -2.0000f, -0.1667f), XMFLOAT4(0.376f, 0.582f, 0.236f, 1.000f) },
		{XMFLOAT3(2.0000f, -2.0000f, -0.1667f), XMFLOAT4(0.415f, 0.606f, 0.702f, 1.000f) },
		{XMFLOAT3(2.0000f, -2.3333f, -0.1667f), XMFLOAT4(0.117f, 0.213f, 0.969f, 1.000f) },
		{XMFLOAT3(1.6667f, -2.3333f, 0.1667f), XMFLOAT4(0.568f, 0.694f, 0.510f, 1.000f) },
		{XMFLOAT3(1.6667f, -2.0000f, 0.1667f), XMFLOAT4(0.503f, 0.787f, 0.898f, 1.000f) },
		{XMFLOAT3(2.0000f, -2.0000f, 0.1667f), XMFLOAT4(0.373f, 0.676f, 0.745f, 1.000f) },
		{XMFLOAT3(2.0000f, -2.3333f, 0.1667f), XMFLOAT4(0.600f, 0.237f, 0.272f, 1.000f) },
		
		{XMFLOAT3(2.0000f, -2.3333f, -0.1667f), XMFLOAT4(0.040f, 0.756f, 0.386f, 1.000f) },
		{XMFLOAT3(2.0000f, -2.0000f, -0.1667f), XMFLOAT4(0.304f, 0.884f, 0.842f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.455f, 0.663f, 0.722f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.3333f, -0.1667f), XMFLOAT4(0.955f, 0.915f, 0.811f, 1.000f) },
		{XMFLOAT3(2.0000f, -2.3333f, 0.1667f), XMFLOAT4(0.302f, 0.236f, 0.608f, 1.000f) },
		{XMFLOAT3(2.0000f, -2.0000f, 0.1667f), XMFLOAT4(0.633f, 0.219f, 0.797f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.635f, 0.812f, 0.782f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.3333f, 0.1667f), XMFLOAT4(0.305f, 0.226f, 0.178f, 1.000f) },
		
		{XMFLOAT3(2.3333f, -2.3333f, -0.1667f), XMFLOAT4(0.321f, 0.784f, 0.254f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.0000f, -0.1667f), XMFLOAT4(0.999f, 0.496f, 0.357f, 1.000f) },
		{XMFLOAT3(2.6667f, -2.0000f, -0.1667f), XMFLOAT4(0.704f, 0.464f, 0.814f, 1.000f) },
		{XMFLOAT3(2.6667f, -2.3333f, -0.1667f), XMFLOAT4(0.213f, 0.117f, 0.541f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.3333f, 0.1667f), XMFLOAT4(0.249f, 0.866f, 0.449f, 1.000f) },
		{XMFLOAT3(2.3333f, -2.0000f, 0.1667f), XMFLOAT4(0.165f, 0.113f, 0.187f, 1.000f) },
		{XMFLOAT3(2.6667f, -2.0000f, 0.1667f), XMFLOAT4(0.045f, 0.793f, 0.111f, 1.000f) },
		{XMFLOAT3(2.6667f, -2.3333f, 0.1667f), XMFLOAT4(0.284f, 0.009f, 0.452f, 1.000f) }


	};
	// 设置顶点缓冲区描述
	D3D11_BUFFER_DESC vbd;
	ZeroMemory(&vbd, sizeof(vbd));
	vbd.Usage = D3D11_USAGE_IMMUTABLE;
	vbd.ByteWidth = sizeof vertices;
	vbd.BindFlags = D3D11_BIND_VERTEX_BUFFER;
	vbd.CPUAccessFlags = 0;
	// 新建顶点缓冲区
	D3D11_SUBRESOURCE_DATA InitData;
	ZeroMemory(&InitData, sizeof(InitData));
	InitData.pSysMem = vertices;
	HR(m_pd3dDevice->CreateBuffer(&vbd, &InitData, m_pVertexBuffer.GetAddressOf()));

	// ******************
	// 索引数组
	//更改了这块地方
	WORD indices[] = {
		//正面
		0, 1, 2,
		2, 3, 0,
		8, 9, 10,
		10, 11, 8,
		16, 17, 18,
		18, 19, 16,
		24, 25, 26,
		26, 27, 24,
		32, 33, 34,
		34, 35, 32,
		40, 41, 42,
		42, 43, 40,
		48, 49, 50,
		50, 51, 48,
		56, 57, 58,
		58, 59, 56,
		64, 65, 66,
		66, 67, 64,
		72, 73, 74,
		74, 75, 72,
		80, 81, 82,
		82, 83, 80,
		88, 89, 90,
		90, 91, 88,
		96, 97, 98,
		98, 99, 96,
		104, 105, 106,
		106, 107, 104,
		112, 113, 114,
		114, 115, 112,
		120, 121, 122,
		122, 123, 120,
		128, 129, 130,
		130, 131, 128,
		136, 137, 138,
		138, 139, 136,
		144, 145, 146,
		146, 147, 144,
		152, 153, 154,
		154, 155, 152,
		160, 161, 162,
		162, 163, 160,
		168, 169, 170,
		170, 171, 168,
		176, 177, 178,
		178, 179, 176,
		184, 185, 186,
		186, 187, 184,
		192, 193, 194,
		194, 195, 192,
		200, 201, 202,
		202, 203, 200,
		208, 209, 210,
		210, 211, 208,
		216, 217, 218,
		218, 219, 216,
		224, 225, 226,
		226, 227, 224,
		232, 233, 234,
		234, 235, 232,
		240, 241, 242,
		242, 243, 240,
		248, 249, 250,
		250, 251, 248,
		256, 257, 258,
		258, 259, 256,
		264, 265, 266,
		266, 267, 264,
		272, 273, 274,
		274, 275, 272,
		280, 281, 282,
		282, 283, 280,
		288, 289, 290,
		290, 291, 288,
		296, 297, 298,
		298, 299, 296,
		304, 305, 306,
		306, 307, 304,
		312, 313, 314,
		314, 315, 312,
		320, 321, 322,
		322, 323, 320,
		328, 329, 330,
		330, 331, 328,
		336, 337, 338,
		338, 339, 336,
		344, 345, 346,
		346, 347, 344,
		352, 353, 354,
		354, 355, 352,
		360, 361, 362,
		362, 363, 360,
		368, 369, 370,
		370, 371, 368,
		376, 377, 378,
		378, 379, 376,
		384, 385, 386,
		386, 387, 384,
		392, 393, 394,
		394, 395, 392,
		400, 401, 402,
		402, 403, 400,
		408, 409, 410,
		410, 411, 408,
		416, 417, 418,
		418, 419, 416,
		424, 425, 426,
		426, 427, 424,
		432, 433, 434,
		434, 435, 432,
		440, 441, 442,
		442, 443, 440,
		448, 449, 450,
		450, 451, 448,
		456, 457, 458,
		458, 459, 456,
		464, 465, 466,
		466, 467, 464,
		472, 473, 474,
		474, 475, 472,
		480, 481, 482,
		482, 483, 480,
		488, 489, 490,
		490, 491, 488,
		496, 497, 498,
		498, 499, 496,
		504, 505, 506,
		506, 507, 504,
		512, 513, 514,
		514, 515, 512,
		520, 521, 522,
		522, 523, 520,
		528, 529, 530,
		530, 531, 528,
		536, 537, 538,
		538, 539, 536,
		544, 545, 546,
		546, 547, 544,
		552, 553, 554,
		554, 555, 552,
		560, 561, 562,
		562, 563, 560,
		568, 569, 570,
		570, 571, 568,
		576, 577, 578,
		578, 579, 576,
		584, 585, 586,
		586, 587, 584,
		592, 593, 594,
		594, 595, 592,
		// 左面
		4, 5, 1,
		1, 0, 4,
		12, 13, 9,
		9, 8, 12,
		20, 21, 17,
		17, 16, 20,
		28, 29, 25,
		25, 24, 28,
		36, 37, 33,
		33, 32, 36,
		44, 45, 41,
		41, 40, 44,
		52, 53, 49,
		49, 48, 52,
		60, 61, 57,
		57, 56, 60,
		68, 69, 65,
		65, 64, 68,
		76, 77, 73,
		73, 72, 76,
		84, 85, 81,
		81, 80, 84,
		92, 93, 89,
		89, 88, 92,
		100, 101, 97,
		97, 96, 100,
		108, 109, 105,
		105, 104, 108,
		116, 117, 113,
		113, 112, 116,
		124, 125, 121,
		121, 120, 124,
		132, 133, 129,
		129, 128, 132,
		140, 141, 137,
		137, 136, 140,
		148, 149, 145,
		145, 144, 148,
		156, 157, 153,
		153, 152, 156,
		164, 165, 161,
		161, 160, 164,
		172, 173, 169,
		169, 168, 172,
		180, 181, 177,
		177, 176, 180,
		188, 189, 185,
		185, 184, 188,
		196, 197, 193,
		193, 192, 196,
		204, 205, 201,
		201, 200, 204,
		212, 213, 209,
		209, 208, 212,
		220, 221, 217,
		217, 216, 220,
		228, 229, 225,
		225, 224, 228,
		236, 237, 233,
		233, 232, 236,
		244, 245, 241,
		241, 240, 244,
		252, 253, 249,
		249, 248, 252,
		260, 261, 257,
		257, 256, 260,
		268, 269, 265,
		265, 264, 268,
		276, 277, 273,
		273, 272, 276,
		284, 285, 281,
		281, 280, 284,
		292, 293, 289,
		289, 288, 292,
		300, 301, 297,
		297, 296, 300,
		308, 309, 305,
		305, 304, 308,
		316, 317, 313,
		313, 312, 316,
		324, 325, 321,
		321, 320, 324,
		332, 333, 329,
		329, 328, 332,
		340, 341, 337,
		337, 336, 340,
		348, 349, 345,
		345, 344, 348,
		356, 357, 353,
		353, 352, 356,
		364, 365, 361,
		361, 360, 364,
		372, 373, 369,
		369, 368, 372,
		380, 381, 377,
		377, 376, 380,
		388, 389, 385,
		385, 384, 388,
		396, 397, 393,
		393, 392, 396,
		404, 405, 401,
		401, 400, 404,
		412, 413, 409,
		409, 408, 412,
		420, 421, 417,
		417, 416, 420,
		428, 429, 425,
		425, 424, 428,
		436, 437, 433,
		433, 432, 436,
		444, 445, 441,
		441, 440, 444,
		452, 453, 449,
		449, 448, 452,
		460, 461, 457,
		457, 456, 460,
		468, 469, 465,
		465, 464, 468,
		476, 477, 473,
		473, 472, 476,
		484, 485, 481,
		481, 480, 484,
		492, 493, 489,
		489, 488, 492,
		500, 501, 497,
		497, 496, 500,
		508, 509, 505,
		505, 504, 508,
		516, 517, 513,
		513, 512, 516,
		524, 525, 521,
		521, 520, 524,
		532, 533, 529,
		529, 528, 532,
		540, 541, 537,
		537, 536, 540,
		548, 549, 545,
		545, 544, 548,
		556, 557, 553,
		553, 552, 556,
		564, 565, 561,
		561, 560, 564,
		572, 573, 569,
		569, 568, 572,
		580, 581, 577,
		577, 576, 580,
		588, 589, 585,
		585, 584, 588,
		596, 597, 593,
		593, 592, 596,
		// 顶面
		1, 5, 6,
		6, 2, 1,
		9, 13, 14,
		14, 10, 9,
		17, 21, 22,
		22, 18, 17,
		25, 29, 30,
		30, 26, 25,
		33, 37, 38,
		38, 34, 33,
		41, 45, 46,
		46, 42, 41,
		49, 53, 54,
		54, 50, 49,
		57, 61, 62,
		62, 58, 57,
		65, 69, 70,
		70, 66, 65,
		73, 77, 78,
		78, 74, 73,
		81, 85, 86,
		86, 82, 81,
		89, 93, 94,
		94, 90, 89,
		97, 101, 102,
		102, 98, 97,
		105, 109, 110,
		110, 106, 105,
		113, 117, 118,
		118, 114, 113,
		121, 125, 126,
		126, 122, 121,
		129, 133, 134,
		134, 130, 129,
		137, 141, 142,
		142, 138, 137,
		145, 149, 150,
		150, 146, 145,
		153, 157, 158,
		158, 154, 153,
		161, 165, 166,
		166, 162, 161,
		169, 173, 174,
		174, 170, 169,
		177, 181, 182,
		182, 178, 177,
		185, 189, 190,
		190, 186, 185,
		193, 197, 198,
		198, 194, 193,
		201, 205, 206,
		206, 202, 201,
		209, 213, 214,
		214, 210, 209,
		217, 221, 222,
		222, 218, 217,
		225, 229, 230,
		230, 226, 225,
		233, 237, 238,
		238, 234, 233,
		241, 245, 246,
		246, 242, 241,
		249, 253, 254,
		254, 250, 249,
		257, 261, 262,
		262, 258, 257,
		265, 269, 270,
		270, 266, 265,
		273, 277, 278,
		278, 274, 273,
		281, 285, 286,
		286, 282, 281,
		289, 293, 294,
		294, 290, 289,
		297, 301, 302,
		302, 298, 297,
		305, 309, 310,
		310, 306, 305,
		313, 317, 318,
		318, 314, 313,
		321, 325, 326,
		326, 322, 321,
		329, 333, 334,
		334, 330, 329,
		337, 341, 342,
		342, 338, 337,
		345, 349, 350,
		350, 346, 345,
		353, 357, 358,
		358, 354, 353,
		361, 365, 366,
		366, 362, 361,
		369, 373, 374,
		374, 370, 369,
		377, 381, 382,
		382, 378, 377,
		385, 389, 390,
		390, 386, 385,
		393, 397, 398,
		398, 394, 393,
		401, 405, 406,
		406, 402, 401,
		409, 413, 414,
		414, 410, 409,
		417, 421, 422,
		422, 418, 417,
		425, 429, 430,
		430, 426, 425,
		433, 437, 438,
		438, 434, 433,
		441, 445, 446,
		446, 442, 441,
		449, 453, 454,
		454, 450, 449,
		457, 461, 462,
		462, 458, 457,
		465, 469, 470,
		470, 466, 465,
		473, 477, 478,
		478, 474, 473,
		481, 485, 486,
		486, 482, 481,
		489, 493, 494,
		494, 490, 489,
		497, 501, 502,
		502, 498, 497,
		505, 509, 510,
		510, 506, 505,
		513, 517, 518,
		518, 514, 513,
		521, 525, 526,
		526, 522, 521,
		529, 533, 534,
		534, 530, 529,
		537, 541, 542,
		542, 538, 537,
		545, 549, 550,
		550, 546, 545,
		553, 557, 558,
		558, 554, 553,
		561, 565, 566,
		566, 562, 561,
		569, 573, 574,
		574, 570, 569,
		577, 581, 582,
		582, 578, 577,
		585, 589, 590,
		590, 586, 585,
		593, 597, 598,
		598, 594, 593,
		// 背面
		7, 6, 5,
		5, 4, 7,
		15, 14, 13,
		13, 12, 15,
		23, 22, 21,
		21, 20, 23,
		31, 30, 29,
		29, 28, 31,
		39, 38, 37,
		37, 36, 39,
		47, 46, 45,
		45, 44, 47,
		55, 54, 53,
		53, 52, 55,
		63, 62, 61,
		61, 60, 63,
		71, 70, 69,
		69, 68, 71,
		79, 78, 77,
		77, 76, 79,
		87, 86, 85,
		85, 84, 87,
		95, 94, 93,
		93, 92, 95,
		103, 102, 101,
		101, 100, 103,
		111, 110, 109,
		109, 108, 111,
		119, 118, 117,
		117, 116, 119,
		127, 126, 125,
		125, 124, 127,
		135, 134, 133,
		133, 132, 135,
		143, 142, 141,
		141, 140, 143,
		151, 150, 149,
		149, 148, 151,
		159, 158, 157,
		157, 156, 159,
		167, 166, 165,
		165, 164, 167,
		175, 174, 173,
		173, 172, 175,
		183, 182, 181,
		181, 180, 183,
		191, 190, 189,
		189, 188, 191,
		199, 198, 197,
		197, 196, 199,
		207, 206, 205,
		205, 204, 207,
		215, 214, 213,
		213, 212, 215,
		223, 222, 221,
		221, 220, 223,
		231, 230, 229,
		229, 228, 231,
		239, 238, 237,
		237, 236, 239,
		247, 246, 245,
		245, 244, 247,
		255, 254, 253,
		253, 252, 255,
		263, 262, 261,
		261, 260, 263,
		271, 270, 269,
		269, 268, 271,
		279, 278, 277,
		277, 276, 279,
		287, 286, 285,
		285, 284, 287,
		295, 294, 293,
		293, 292, 295,
		303, 302, 301,
		301, 300, 303,
		311, 310, 309,
		309, 308, 311,
		319, 318, 317,
		317, 316, 319,
		327, 326, 325,
		325, 324, 327,
		335, 334, 333,
		333, 332, 335,
		343, 342, 341,
		341, 340, 343,
		351, 350, 349,
		349, 348, 351,
		359, 358, 357,
		357, 356, 359,
		367, 366, 365,
		365, 364, 367,
		375, 374, 373,
		373, 372, 375,
		383, 382, 381,
		381, 380, 383,
		391, 390, 389,
		389, 388, 391,
		399, 398, 397,
		397, 396, 399,
		407, 406, 405,
		405, 404, 407,
		415, 414, 413,
		413, 412, 415,
		423, 422, 421,
		421, 420, 423,
		431, 430, 429,
		429, 428, 431,
		439, 438, 437,
		437, 436, 439,
		447, 446, 445,
		445, 444, 447,
		455, 454, 453,
		453, 452, 455,
		463, 462, 461,
		461, 460, 463,
		471, 470, 469,
		469, 468, 471,
		479, 478, 477,
		477, 476, 479,
		487, 486, 485,
		485, 484, 487,
		495, 494, 493,
		493, 492, 495,
		503, 502, 501,
		501, 500, 503,
		511, 510, 509,
		509, 508, 511,
		519, 518, 517,
		517, 516, 519,
		527, 526, 525,
		525, 524, 527,
		535, 534, 533,
		533, 532, 535,
		543, 542, 541,
		541, 540, 543,
		551, 550, 549,
		549, 548, 551,
		559, 558, 557,
		557, 556, 559,
		567, 566, 565,
		565, 564, 567,
		575, 574, 573,
		573, 572, 575,
		583, 582, 581,
		581, 580, 583,
		591, 590, 589,
		589, 588, 591,
		599, 598, 597,
		597, 596, 599,
		// 右面
		3, 2, 6,
		6, 7, 3,
		11, 10, 14,
		14, 15, 11,
		19, 18, 22,
		22, 23, 19,
		27, 26, 30,
		30, 31, 27,
		35, 34, 38,
		38, 39, 35,
		43, 42, 46,
		46, 47, 43,
		51, 50, 54,
		54, 55, 51,
		59, 58, 62,
		62, 63, 59,
		67, 66, 70,
		70, 71, 67,
		75, 74, 78,
		78, 79, 75,
		83, 82, 86,
		86, 87, 83,
		91, 90, 94,
		94, 95, 91,
		99, 98, 102,
		102, 103, 99,
		107, 106, 110,
		110, 111, 107,
		115, 114, 118,
		118, 119, 115,
		123, 122, 126,
		126, 127, 123,
		131, 130, 134,
		134, 135, 131,
		139, 138, 142,
		142, 143, 139,
		147, 146, 150,
		150, 151, 147,
		155, 154, 158,
		158, 159, 155,
		163, 162, 166,
		166, 167, 163,
		171, 170, 174,
		174, 175, 171,
		179, 178, 182,
		182, 183, 179,
		187, 186, 190,
		190, 191, 187,
		195, 194, 198,
		198, 199, 195,
		203, 202, 206,
		206, 207, 203,
		211, 210, 214,
		214, 215, 211,
		219, 218, 222,
		222, 223, 219,
		227, 226, 230,
		230, 231, 227,
		235, 234, 238,
		238, 239, 235,
		243, 242, 246,
		246, 247, 243,
		251, 250, 254,
		254, 255, 251,
		259, 258, 262,
		262, 263, 259,
		267, 266, 270,
		270, 271, 267,
		275, 274, 278,
		278, 279, 275,
		283, 282, 286,
		286, 287, 283,
		291, 290, 294,
		294, 295, 291,
		299, 298, 302,
		302, 303, 299,
		307, 306, 310,
		310, 311, 307,
		315, 314, 318,
		318, 319, 315,
		323, 322, 326,
		326, 327, 323,
		331, 330, 334,
		334, 335, 331,
		339, 338, 342,
		342, 343, 339,
		347, 346, 350,
		350, 351, 347,
		355, 354, 358,
		358, 359, 355,
		363, 362, 366,
		366, 367, 363,
		371, 370, 374,
		374, 375, 371,
		379, 378, 382,
		382, 383, 379,
		387, 386, 390,
		390, 391, 387,
		395, 394, 398,
		398, 399, 395,
		403, 402, 406,
		406, 407, 403,
		411, 410, 414,
		414, 415, 411,
		419, 418, 422,
		422, 423, 419,
		427, 426, 430,
		430, 431, 427,
		435, 434, 438,
		438, 439, 435,
		443, 442, 446,
		446, 447, 443,
		451, 450, 454,
		454, 455, 451,
		459, 458, 462,
		462, 463, 459,
		467, 466, 470,
		470, 471, 467,
		475, 474, 478,
		478, 479, 475,
		483, 482, 486,
		486, 487, 483,
		491, 490, 494,
		494, 495, 491,
		499, 498, 502,
		502, 503, 499,
		507, 506, 510,
		510, 511, 507,
		515, 514, 518,
		518, 519, 515,
		523, 522, 526,
		526, 527, 523,
		531, 530, 534,
		534, 535, 531,
		539, 538, 542,
		542, 543, 539,
		547, 546, 550,
		550, 551, 547,
		555, 554, 558,
		558, 559, 555,
		563, 562, 566,
		566, 567, 563,
		571, 570, 574,
		574, 575, 571,
		579, 578, 582,
		582, 583, 579,
		587, 586, 590,
		590, 591, 587,
		595, 594, 598,
		598, 599, 595,
		// 底面
		4, 0, 3,
		3, 7, 4,
		12, 8, 11,
		11, 15, 12,
		20, 16, 19,
		19, 23, 20,
		28, 24, 27,
		27, 31, 28,
		36, 32, 35,
		35, 39, 36,
		44, 40, 43,
		43, 47, 44,
		52, 48, 51,
		51, 55, 52,
		60, 56, 59,
		59, 63, 60,
		68, 64, 67,
		67, 71, 68,
		76, 72, 75,
		75, 79, 76,
		84, 80, 83,
		83, 87, 84,
		92, 88, 91,
		91, 95, 92,
		100, 96, 99,
		99, 103, 100,
		108, 104, 107,
		107, 111, 108,
		116, 112, 115,
		115, 119, 116,
		124, 120, 123,
		123, 127, 124,
		132, 128, 131,
		131, 135, 132,
		140, 136, 139,
		139, 143, 140,
		148, 144, 147,
		147, 151, 148,
		156, 152, 155,
		155, 159, 156,
		164, 160, 163,
		163, 167, 164,
		172, 168, 171,
		171, 175, 172,
		180, 176, 179,
		179, 183, 180,
		188, 184, 187,
		187, 191, 188,
		196, 192, 195,
		195, 199, 196,
		204, 200, 203,
		203, 207, 204,
		212, 208, 211,
		211, 215, 212,
		220, 216, 219,
		219, 223, 220,
		228, 224, 227,
		227, 231, 228,
		236, 232, 235,
		235, 239, 236,
		244, 240, 243,
		243, 247, 244,
		252, 248, 251,
		251, 255, 252,
		260, 256, 259,
		259, 263, 260,
		268, 264, 267,
		267, 271, 268,
		276, 272, 275,
		275, 279, 276,
		284, 280, 283,
		283, 287, 284,
		292, 288, 291,
		291, 295, 292,
		300, 296, 299,
		299, 303, 300,
		308, 304, 307,
		307, 311, 308,
		316, 312, 315,
		315, 319, 316,
		324, 320, 323,
		323, 327, 324,
		332, 328, 331,
		331, 335, 332,
		340, 336, 339,
		339, 343, 340,
		348, 344, 347,
		347, 351, 348,
		356, 352, 355,
		355, 359, 356,
		364, 360, 363,
		363, 367, 364,
		372, 368, 371,
		371, 375, 372,
		380, 376, 379,
		379, 383, 380,
		388, 384, 387,
		387, 391, 388,
		396, 392, 395,
		395, 399, 396,
		404, 400, 403,
		403, 407, 404,
		412, 408, 411,
		411, 415, 412,
		420, 416, 419,
		419, 423, 420,
		428, 424, 427,
		427, 431, 428,
		436, 432, 435,
		435, 439, 436,
		444, 440, 443,
		443, 447, 444,
		452, 448, 451,
		451, 455, 452,
		460, 456, 459,
		459, 463, 460,
		468, 464, 467,
		467, 471, 468,
		476, 472, 475,
		475, 479, 476,
		484, 480, 483,
		483, 487, 484,
		492, 488, 491,
		491, 495, 492,
		500, 496, 499,
		499, 503, 500,
		508, 504, 507,
		507, 511, 508,
		516, 512, 515,
		515, 519, 516,
		524, 520, 523,
		523, 527, 524,
		532, 528, 531,
		531, 535, 532,
		540, 536, 539,
		539, 543, 540,
		548, 544, 547,
		547, 551, 548,
		556, 552, 555,
		555, 559, 556,
		564, 560, 563,
		563, 567, 564,
		572, 568, 571,
		571, 575, 572,
		580, 576, 579,
		579, 583, 580,
		588, 584, 587,
		587, 591, 588,
		596, 592, 595,
		595, 599, 596
	};
	// 设置索引缓冲区描述
	D3D11_BUFFER_DESC ibd;
	ZeroMemory(&ibd, sizeof(ibd));
	ibd.Usage = D3D11_USAGE_IMMUTABLE;
	ibd.ByteWidth = sizeof indices;
	ibd.BindFlags = D3D11_BIND_INDEX_BUFFER;
	ibd.CPUAccessFlags = 0;
	// 新建索引缓冲区
	InitData.pSysMem = indices;
	HR(m_pd3dDevice->CreateBuffer(&ibd, &InitData, m_pIndexBuffer.GetAddressOf()));
	// 输入装配阶段的索引缓冲区设置
	m_pd3dImmediateContext->IASetIndexBuffer(m_pIndexBuffer.Get(), DXGI_FORMAT_R16_UINT, 0);


	// ******************
	// 设置常量缓冲区描述
	//
	D3D11_BUFFER_DESC cbd;
	ZeroMemory(&cbd, sizeof(cbd));
	cbd.Usage = D3D11_USAGE_DYNAMIC;
	cbd.ByteWidth = sizeof(ConstantBuffer);
	cbd.BindFlags = D3D11_BIND_CONSTANT_BUFFER;
	cbd.CPUAccessFlags = D3D11_CPU_ACCESS_WRITE;
	// 新建常量缓冲区，不使用初始数据
	HR(m_pd3dDevice->CreateBuffer(&cbd, nullptr, m_pConstantBuffer.GetAddressOf()));

	// 初始化常量缓冲区的值
	m_CBuffer.world = XMMatrixIdentity();	// 单位矩阵的转置是它本身
	m_CBuffer.view = XMMatrixTranspose(XMMatrixLookAtLH(
		XMVectorSet(0.0f, 0.0f, -5.0f, 0.0f),
		XMVectorSet(0.0f, 0.0f, 0.0f, 0.0f),
		XMVectorSet(0.0f, 1.0f, 0.0f, 0.0f)
	));
	m_CBuffer.proj = XMMatrixTranspose(XMMatrixPerspectiveFovLH(XM_PIDIV2, AspectRatio(), 1.0f, 1000.0f));


	// ******************
	// 给渲染管线各个阶段绑定好所需资源
	//

	// 输入装配阶段的顶点缓冲区设置
	UINT stride = sizeof(VertexPosColor);	// 跨越字节数
	UINT offset = 0;						// 起始偏移量

	m_pd3dImmediateContext->IASetVertexBuffers(0, 1, m_pVertexBuffer.GetAddressOf(), &stride, &offset);
	// 设置图元类型，设定输入布局
	m_pd3dImmediateContext->IASetPrimitiveTopology(D3D11_PRIMITIVE_TOPOLOGY_TRIANGLELIST);
	m_pd3dImmediateContext->IASetInputLayout(m_pVertexLayout.Get());
	// 将着色器绑定到渲染管线
	m_pd3dImmediateContext->VSSetShader(m_pVertexShader.Get(), nullptr, 0);
	// 将更新好的常量缓冲区绑定到顶点着色器
	m_pd3dImmediateContext->VSSetConstantBuffers(0, 1, m_pConstantBuffer.GetAddressOf());

	m_pd3dImmediateContext->PSSetShader(m_pPixelShader.Get(), nullptr, 0);

	// ******************
	// 设置调试对象名
	//
	D3D11SetDebugObjectName(m_pVertexLayout.Get(), "VertexPosColorLayout");
	D3D11SetDebugObjectName(m_pVertexBuffer.Get(), "VertexBuffer");
	D3D11SetDebugObjectName(m_pIndexBuffer.Get(), "IndexBuffer");
	D3D11SetDebugObjectName(m_pConstantBuffer.Get(), "ConstantBuffer");
	D3D11SetDebugObjectName(m_pVertexShader.Get(), "Cube_VS");
	D3D11SetDebugObjectName(m_pPixelShader.Get(), "Cube_PS");

	return true;
}
